@using Binke.Utility;
@using Doctyme.Repository.Enumerable;
@model Doctyme.Model.ViewModels.OrganizationViewModel
@{
    ViewBag.Title = Model.DoctorName + " - " + Model.Speciality + " ";
    var lstOrgLoc = Model.lstOrgAddress != null ? Model.lstOrgAddress.Where(x => x.AddressTypeId == 11).ToList() : null;
    var locdata = lstOrgLoc != null ? lstOrgLoc.OrderBy(x => x.OrganisationId).FirstOrDefault() : null;
}
<link href="~/Scripts/client/carousel/assets/owl.carousel.min.css" rel="stylesheet" />
<link href="~/Scripts/client/carousel/assets/owl.theme.default.min.css" rel="stylesheet" />
<style type="text/css">
    .map-container .card-block {
        margin-bottom: 15px;
    }

    .single-comment {
        margin-top: inherit;
        margin-bottom: 8px;
    }

        .single-comment img {
            height: 60px;
        }

    *:focus {
        outline: none;
    }

    .owl-theme .owl-controls {
        text-align: center;
        -webkit-tap-highlight-color: transparent;
        cursor: e-resize
    }

        .owl-theme .owl-controls .owl-nav [class*=owl-] {
            color: #fff;
            font-size: 14px;
            font-family: 'KeplerStd-Regular';
            display: block;
            cursor: e-resize;
        }

    .owl-prev {
        left: 0;
        text-align: left;
        position: absolute;
        z-index: 999999;
        cursor: e-resize;
        top: 50%;
        transform: translateY(-50%);
        padding-right: 15px;
        padding-top: 10px;
        padding-bottom: 10px;
        padding-left: 10px;
        background-color: #E7E7E7;
        transition: 0.5s all;
    }

    .owl-next {
        text-align: right;
        position: absolute;
        z-index: 999999;
        top: 50%;
        transform: translateY(-50%);
        cursor: e-resize;
        right: 0;
        padding-right: 10px;
        padding-top: 10px;
        padding-bottom: 10px;
        padding-left: 15px;
        background-color: #E7E7E7;
        transition: 0.5s all;
    }

    .owl-theme .owl-controls .owl-nav [class*=owl-]:hover {
        background-color: #1f1f1f;
        transition: 0.5s all;
        cursor: e-resize
    }

    .owl-theme .owl-controls .owl-nav .disabled {
        opacity: .5;
        cursor: e-resize
    }

    #owl-demo .owl-item > div img {
        display: block;
        width: 100%;
        height: auto;
        -webkit-border-radius: 3px;
        -moz-border-radius: 3px;
        border-radius: 3px;
        margin-bottom: 4px;
    }

    #owl-demo .owl-item > div {
        padding: 0px 2px
    }

    .owl-carousel:hover .owl-controls .owl-buttons .owl-prev {
        opacity: 1 !important;
    }

    .owl-carousel:hover .owl-controls .owl-buttons .owl-next {
        opacity: 1 !important;
    }

    .mrg-tb {
        margin-bottom: 5px;
        margin-top: 5px;
    }

    i.fa.fa-star {
        color: yellow;
    }

    button#btnSubmit {
        width: auto;
    }

    .btn {
        width: 100%;
        margin-bottom: 1%;
        color: white;
    }

    .text-white:hover {
        border-bottom: 2px solid red;
    }

    a.btn.btn-sm.btn-primary.text-white.active {
        border-bottom: 2px solid red;
    }


    .image {
        height: 25% !important;
        width: 100%;
    }

    .image-map {
        /*height: 40%;
        width: 100%;*/
        height: 250px;
        width: 500px;
        /*margin-left: 40px;*/
    }

    hr {
        border-top: 1px solid black;
    }

    .header-title {
        color: #3498db;
        font-weight: bold;
        margin-top: 10px;
    }

    .header-top-inner .header-support-info li span.icon {
        padding: 5px !important;
        line-height: 15px;
    }

    .glyphicon-star {
        color: yellow;
        font-size: 15px;
    }

    .active > a {
        background-color: #3498db !important;
        color: black !important
    }

    .a {
        cursor: pointer;
        font-size: 17px;
        font-weight: bold;
    }

    summary {
        font-weight: bold;
        font-size: 15px;
        background: #3498db;
        padding: 5px 5px 5px 10px;
        color: #fff;
        margin-bottom: 10px;
    }

        summary:hover {
            cursor: pointer;
        }

    details[open] {
        padding-bottom: 1px !important;
    }

    details {
        max-width: 600px;
        margin: 0 auto 5px;
        background-color: white;
        border-radius: 5px;
        box-shadow: 0 4px 8px 0 rgba(55,92,192,.08),0 0 1px 0 rgba(18,32,73,.08);
    }

        details p {
            padding: 0px 10px 0px 10px;
            margin-bottom: 0px !important;
            font-size: 12px !important;
            line-height: 19px;
        }

        details ul {
            position: relative;
            bottom: 25px;
            right: 20px;
        }

            details ul li {
                display: inline-block;
                float: right;
            }



    .nav {
        display: inherit;
    }

    .social-icon {
        position: inherit;
    }

    .favSocialIcon {
        /*margin-left: 10%;*/
        margin-bottom: 0%;
    }

        .favSocialIcon li {
            list-style: none;
            float: left;
        }

        .favSocialIcon .fa-change {
            padding: 5px;
            font-size: 30px;
            width: 40px;
            height: 40px;
            text-align: center;
            text-decoration: none;
            margin: 5px 2px;
            border-radius: 36px;
        }

    .fa-change:hover {
        opacity: 0.7;
    }

    .fa-change-facebook {
        background: #3B5998;
        color: white;
    }

    .fa-change-twitter {
        background: #55ACEE;
        color: white;
    }

    .fa-change-google {
        background: #dd4b39;
        color: white;
    }

    .fa-change-linkedin {
        background: #007bb5;
        color: white;
    }

    .fa-change-youtube {
        background: #bb0000;
        color: white;
    }

    .fa-change-instagram {
        background: #125688;
        color: white;
    }

    button.owl-prev, button.owl-next span {
        height: 40px;
        width: 10px;
    }

        button.owl-prev span, button.owl-next span {
            font-size: 35px;
        }

    .tabsCustom {
        padding: 6px 14px;
        margin-bottom: 6px;
        /*margin-top: 5px;
        width: 250px;*/
    }

    .margin-lft60 {
        margin-left: 60px !important;
        margin-bottom: 2px !important;
        margin-right: 80px !important;
    }

    /*.nav-tabs a.active {
        background-color: #3498db !important;
        color: white !important;
    }

    .nav-tabs a {
        background-color: rgb(243, 237, 237);
        color: dodgerblue !important;
    }*/

    .bgColorForbuttons {
        background-color: #3498db;
        color: white !important;
    }


    .table thead th {
        padding: unset !important;
        vertical-align: unset !important
    }

    tr, th, td {
        font-size: 8px;
        text-align: center;
    }

    .table {
        line-height: 2 !important
    }

    .marginBottom150px {
        margin-bottom: 50px
    }

    .timesSlotsButtons {
        font-size: 8px;
        width: 90px;
        background-color: rgb(49, 209, 49);
        border-radius: 10px;
        padding: 3px 0px 3px 0px;
    }

    .timesSlotsSelectButtons {
        font-size: 8px;
        width: 90px;
        background-color: orange !important;
        border-radius: 10px;
        padding: 3px 0px 3px 0px;
    }

    .owl-carousel .item img {
        height: 200px;
        width: 400px;
    }

    .noslotsAvlbuttons {
        color: #8f7474;
        font-size: 8px;
        width: 90px;
        background-color: rgb(243, 237, 237);
        border-radius: 10px;
        padding: 3px 0px 3px 0px;
    }

    ul.star_rate li {
        list-style: none;
        display: inline;
        margin: 0 1px;
    }

    ul.listdata {
        padding: 0;
        font-size: 15px;
        line-height: 20px;
    }

    ul.star_rate li {
        list-style: none;
        display: inline;
        margin: 0 1px;
    }

    .text-orange {
        color: orange !important;
    }

    .text-white {
        color: white !important;
    }

    .ReviewCount {
        font-size: 20px;
        font-weight: bold;
    }

    ul.star_rate li i {
        color: #efa51e;
        font-size: 20px;
        /*position: relative;*/
        top: 2px;
        padding-right: 2px !important
    }

    .btn-primary:not(:disabled):not(.disabled).active {
        background-color: #007bff;
        border-color: #007bff;
        /*color:black !important;*/
    }

    .practiceWebsite {
        /*padding: 0px 10px 0px 10px;*/
        margin-bottom: 0px !important;
        font-size: 13px !important;
        line-height: 19px;
    }

    .adressClick:hover {
        color: #fd7e14
    }

    .margiLeft15px {
        margin-left: 15px;
    }

    .cursorNotAllowed {
        cursor: not-allowed !important;
    }

    .adressClick p:hover {
        text-decoration: underline;
        color: orange;
    }

    .accordianCustHeader {
        border-radius: .35rem;
        border-color: #239fbc96;
    }

    .accordiaHeaderbgColor {
        color: #3498db
    }

    .acbody p {
        padding: 0px 10px 0px 10px;
        margin-bottom: 0px !important;
        font-size: 14px !important;
        line-height: 19px;
    }

    .acbody ul {
        position: relative;
        /*bottom: 25px;
        right: 20px;*/
    }

        .acbody ul li {
            display: inline-block;
            /*float: right;*/
        }

    .accHeaderPaddig {
        padding: 0.35rem 1.25rem !important;
    }

    .startColorwhite {
        color: #64373729 !important
    }

    .accBodyTop {
        padding-top: 15px !important;
        padding-bottom: 1px;
    }

    .card-header .accordion-toggle[aria-expanded="true"]:before {
        font-family: 'FontAwesome';
        color: #A80F0F;
        content: "\f0d7";
    }

    .card-header .accordion-toggle[aria-expanded="true"]:before {
        font-family: 'FontAwesome';
        color: #e907079e;
        content: "\f0d7";
        margin-right: 5px;
    }

    .card-header .accordion-toggle[aria-expanded="true"] span {
        color: #e907079e !important;
    }


    .card-header .accordion-toggle[aria-expanded="false"]:before {
        font-family: 'FontAwesome';
        color: #3498db;
        content: "\f0da";
        margin-right: 5px;
    }

    .card-header .accordion-toggle.collapsed:before {
        font-family: 'FontAwesome';
        color: #3498db;
        content: "\f0da";
        margin-right: 5px;
    }

    .headingFont {
        font-weight: bold;
        font-size: 15px;
        background: #3498db;
        padding: 5px 5px 5px 10px;
        color: #0069d9 !important;
        margin-bottom: 10px;
        background-color: rgb(229,254,254);
    }
    /*.experienceOverlay{
        background-image:url(../../Content/client/images/others/ExperienceImage.png);
        background-repeat:no-repeat;
    }*/
    .module {
        background: url(../../Content/client/images/others/ExperienceImage.png);
        background-size: cover;
        width: 60px;
        height: 60px;
        margin: 10px 0 0 10px;
        position: relative;
        float: right;
    }

    .mid h2 {
        font-family: 'Roboto', sans-serif;
        font-weight: 900;
        color: #3498db;
        text-transform: uppercase;
        margin: 0;
        position: absolute;
        top: 40%;
        left: 45%;
        font-size: 1rem;
        transform: translate(-50%, -50%);
    }

    .mid span {
        font-family: 'Roboto', sans-serif;
        font-weight: 900;
        color: #3498db;
        text-transform: uppercase;
        margin: 0;
        position: absolute;
        top: 60%;
        left: 45%;
        font-size: 0.5rem;
        transform: translate(-50%, -50%);
    }

    .section-padding-top-sm {
        padding-top: 40px !important;
    }

    .accordion > .card:first-of-type {
        border-bottom: 1px solid #239fbc96 !important;
    }

    #remote-container video {
        height: auto;
        position: relative !important;
    }

    #me {
        position: relative;
        width: 50%;
        margin: 0 auto;
        display: block;
    }

        #me video {
            position: relative !important;
        }

    #remote-container {
        display: flex;
    }
</style>
<head>
    @*<title>@Model.DoctorName - @Model.TaxonomyCode| DocTyme</title>*@

    @*<link href='https://assets.doctyme.com' rel='dns-prefetch preconnect'>
        <link href='//maps.googleapis.com' rel='dns-prefetch'>
        <link href='//maps.gstatic.com' rel='dns-prefetch'>*@

    @{
        System.Globalization.TextInfo cultInfo = new System.Globalization.CultureInfo("en-US", false).TextInfo;
        string docName = Model.DoctorName != null ? cultInfo.ToTitleCase(Model.DoctorName.ToLower()) : "";
        List<Doctyme.Model.ViewModels.Meta> meta = new List<Doctyme.Model.ViewModels.Meta>();
        meta.Add(new Doctyme.Model.ViewModels.Meta
        {
            Content = "" + Model.DoctorName + ", provides" + Model.Speciality + " care at " + Model.State + ", Call" + Model.PhoneNumber + " to schedule online appointment.",
            Name = "description"
        });
        string CityName = ""; string OrgNames = ""; string TaxonomyCode = ""; string state = "";
        string cityState = "";
        if (Model.lstOrgAddress != null && Model.lstOrgAddress.Count > 0) //Added by Reena
        {
            foreach (var item in Model.lstOrgAddress)
            {
                if (!string.IsNullOrEmpty(CityName))
                {
                    CityName = CityName + ", " + Model.DoctorName + "-" + item.City;
                }
                else
                {
                    CityName = Model.DoctorName + "-" + item.City;
                }

                if (!string.IsNullOrEmpty(state))
                {
                    state = state + " " + item.State;
                }
                else
                {
                    state = item.State;
                }

                if (!string.IsNullOrEmpty(OrgNames))
                {
                    OrgNames = OrgNames + " " + item.OrganisationName;
                }
                else
                {
                    OrgNames = item.OrganisationName;
                }

                if (!string.IsNullOrEmpty(TaxonomyCode))
                {
                    TaxonomyCode = TaxonomyCode + " " + item.TaxonomyCode;
                }
                else
                {
                    TaxonomyCode = item.TaxonomyCode;
                }
            }
            var lstOrgData = Model.lstOrgAddress.Where(x => x.AddressTypeId == 11).ToList();
            if (lstOrgData != null && lstOrgData.Count > 0)
            {
                var data = lstOrgData.OrderBy(x => x.OrganisationId).FirstOrDefault();
                cityState = cultInfo.ToTitleCase(data.City.ToLower()) + ", " + data.State;
            }
        }
        meta.Add(new Doctyme.Model.ViewModels.Meta
        {
            Property = "og:title",
            Content = "" + Model.DoctorName + ", Affiliate " + OrgNames + " - " + TaxonomyCode + " Doctor in " + CityName + " ," + state
        });
        meta.Add(new Doctyme.Model.ViewModels.Meta
        {
            Property = "og:description",
            Content = "" + Model.DoctorName + " is a practicing " + TaxonomyCode + " Doctor in " + CityName + " ," + state
        });

        meta.Add(new Doctyme.Model.ViewModels.Meta
        {
            Property = "keywords",
            Content = Model.DoctorName + " in " + Model.City + " , " + Model.State
        });

        meta.Add(new Doctyme.Model.ViewModels.Meta
        {
            Property = "twitter:image",
            Content = "logo image url"
        });
        meta.Add(new Doctyme.Model.ViewModels.Meta
        {
            Property = "og:url",
            Content = "https://www.doctyme.com/"
        });
        meta.Add(new Doctyme.Model.ViewModels.Meta
        {
            Property = "og:site_name",
            Content = "DocTyme"
        });
        //meta.Add(new Doctyme.Model.ViewModels.Meta
        //{
        //    Property = "og:title",
        //    Content = "Read Doctor Reviews, Compare Doctors &amp; Book Appointments"
        //});
        meta.Add(new Doctyme.Model.ViewModels.Meta
        {
            Property = "og:image",
            Content = "https://assets.doctyme.com/doctyme/site/doctyme-default-image.jpg"
        });
        //meta.Add(new Doctyme.Model.ViewModels.Meta
        //{
        //    Property = "og:description",
        //    Content = "Compare and review doctors and hospitals on the fastest growing healthcare search directory. Get transparent information, ratings, and reviews on DocTyme."
        //});
        meta.Add(new Doctyme.Model.ViewModels.Meta
        {
            Property = "og:type",
            Content = "website"
        });
        meta.Add(new Doctyme.Model.ViewModels.Meta
        {
            Name = "twitter:title",
            Content = "Search & Review Doctors, Hospital, Senior Care, Pharmacy and Book an appointment online."
        });

        string docLongDesc = "";
        docLongDesc = docName + " is a doctor primarily located in " + cityState + " with specialty in " + Model.Speciality + " and is affiliated with multiple hospitals in the area";
        if (Model.PracticeStartDateStr != "0" && Model.PracticeStartDateStr != "")
        {
            docLongDesc = docLongDesc + ", including been in practice for last " + Model.PracticeStartDateStr + " years.";

        }
        else
        {
            //docLongDesc = docLongDesc +","+docName + " is practicing " + Model.Speciality + " in " + cityState + " and is affiliated with multiple hospitals in the area. Has been in practise for years.";
            docLongDesc = docLongDesc + " and has been in practise for years.";
        }
        TempData["metaInfo"] = meta;
    }

    @*<meta name="description" content="@Model.DoctorName , provides @Model.Speciality care at @Model.City in @Model.State, Call @Model.PhoneNumber to schedule online appointment.">*@
    @*@{
            string CityName = "";
        }
        @foreach (var x in Model.lstOrgAddress)
        {
            <meta property="og:title" content="@Model.DoctorName, Affiliate @x.OrganisationName - @x.TaxonomyCode Doctor in @x.City, @x.State">
            <meta property="og:description" content="@Model.DoctorName is a practicing @x.TaxonomyCode doctor in @x.City, @x.State">
            if (!string.IsNullOrEmpty(CityName))
            {
                CityName = CityName + ", " + Model.DoctorName + "-" + x.City;
            }
            else
            {
                CityName = Model.DoctorName + "-" + x.City;
            }
        }*@

    @*<meta name="keywords" content="@CityName, @Model.State" />*@
    @*<meta name="twitter:image" content="https://assets.doctyme.com/doctyme/site/doctyme-default-image.jpg">*@
    @*<meta property="og:url" content="https://www.doctyme.com/">*@
    @*<meta property="og:site_name" content="DocTyme">*@
    @*<meta property="og:title" content="Read Doctor Reviews, Compare Doctors &amp; Book Appointments">*@
    @* <meta property="og:image" content="https://assets.doctyme.com/doctyme/site/doctyme-default-image.jpg">*@
    @*<meta property="og:description" content="Compare and review doctors and hospitals on the fastest growing healthcare search directory. Get transparent information, ratings, and reviews on DocTyme.">
        <meta property="og:type" content="website">*@
    <link rel='icon' href='favicon.ico' type='image/x-icon' />
</head>
<div class="bk-section doctors-profile-area section-padding-top-sm section-padding-bottom-sm" data-id="@Model.DoctorId">

    <input type="hidden" value="@Model.MaxDays" id="lblMaxDays" />
    <input type="hidden" value="@Model.DoctorId" id="lblDoctorId" />
    <input type="hidden" value="@Model.CalenderDatesCount" id="lblcalCount" />
    <input type="hidden" value="@Model.OrganisationId" id="lblOrganizationID" />
    <input type="hidden" value="@Model.OrganisationName" id="lblOrganizationName" />
    <input type="hidden" value="@Model.NPI" id="lblNPI" />
    <input type="hidden" value="" id="lblSlotTime" />
    <input type="hidden" value="" id="lblSlotDate" />
    <input type="hidden" value="" id="lbladdressId" />
    <input type="hidden" value="@Model.Address1" id="Address1" />
    <input type="hidden" value="@Model.Address2" id="Address2" />
    <input type="hidden" value="@Model.City" id="DocCity" />
    <input type="hidden" value="@Model.Country" id="DocCountry" />
    <input type="hidden" value="@Model.ZipCode" id="DocZipCode" />
    <input type="hidden" value="@Model.State" id="DocState" />



    <div class="container">
        <div class="row ">
            <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3">
                <div class="panel panel-default text-center">
                    <div class="panel-body border">
                        <div id="owl-carousel1" class="owl-carousel owl-theme">
                            @*<div class="item">*@
                            @*<img src="@Model.ProfilePicture" alt="@Model.ProfilePicture">*@
                            @*</div>*@
                            @if (Model.DoctorImages != null && Model.DoctorImages.Any())
                            {
                                foreach (var item in Model.DoctorImages)
                                {
                                    <div class="item active">
                                        <img src="@Common.GetValidProfileImagePath(item.ImagePath)" alt="@item.ImagePath">
                                    </div>
                                }
                            }
                            else
                            {
                                <div class="item">
                                    <img src="~/Uploads/ProfilePic/no_picture.png" alt="no_picture">
                                </div>
                            }
                            @*<div class="item">
                                    <img src="~/Content/client/images/1.jpg" alt="">
                                </div>
                                <div class="item">
                                    <img src="~/Content/client/images/2.jpg" alt="">
                                </div>
                                <div class="item">
                                    <img src="~/Content/client/images/3.jpg" alt="">
                                </div>
                                <div class="item">
                                    <img src="~/Content/client/images/4.jpg" alt="">
                                </div>*@


                        </div>

                    </div>
                    <div class=" panel-footer mrg-tb border">
                        <div class="nav nav-tabs">
                            <a data-toggle="tab" class="btn btn-sm btn-primary text-white tabsCustom bgColorForbuttons active" href="#AboutMe">About Me</a>
                            <a data-toggle="tab" class="btn btn-sm btn-primary text-white tabsCustom bgColorForbuttons" href="#PraticeInformation">Pratice Information</a>
                            <a data-toggle="tab" class="btn btn-sm btn-primary text-white tabsCustom bgColorForbuttons" href="#ActiveHospital">Active Hospital Affiliations</a>
                            <a data-toggle="tab" class="btn btn-sm btn-primary text-white tabsCustom bgColorForbuttons" href="#InsuranceAccepted">Insurance Accepted</a>
                            <a data-toggle="tab" class="btn btn-sm btn-primary text-white tabsCustom bgColorForbuttons" href="#Qualifications">Qualifications</a>
                            @*<hr />*@
                            <a data-toggle="tab" class="btn btn-sm btn-primary text-white tabsCustom bgColorForbuttons" href="#Experience">Experience</a>
                            <a data-toggle="tab" class="btn btn-sm btn-primary text-white tabsCustom bgColorForbuttons" href="#BoardCertification">Board Certification</a>
                            <a data-toggle="tab" class="btn btn-sm btn-primary text-white tabsCustom bgColorForbuttons" href="#Languages">Languages</a>
                            <a data-toggle="tab" class="btn btn-sm btn-primary text-white tabsCustom bgColorForbuttons" href="#Reviews">Reviews</a>

                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-5 col-lg-5 border">
                @*<h3 class="header-title">@Model.FullForDoctor <small>(@Model.Education)</small></h3>*@
                <h3 class="header-title d-inline" id="hFullDctName">@Model.FullForDoctor</h3>

                @*<div class="container" style="background-image:url(../../Content/client/images/others/ExperienceImage.png)">
                        <img src="~/Content/client/images/others/ExperienceImage.png"  width="100 "/>
                        <div style="position:absolute;top: 45%;left: 20%; transform: translate(-50%, -50%);">1</div>
                    </div>*@
                @if (!string.IsNullOrEmpty(Model.PracticeStartDateStr))
                {
                    <div class="module mid" title="@Model.PracticeStartDateStr Years">
                        @if (Model.PracticeStartDateStr.ToLower().Contains("experience"))
                        {
                            var ChangedText = @Model.PracticeStartDateStr.Replace("experience", "exp");
                            <h2 style="font-size:7px;text-align:center">@ChangedText</h2>
                        }
                        else
                        {
                            <h2 style="font-size:7px;text-align:center">@Model.PracticeStartDateStr Years Exp</h2>
                        }
                        
                    </div>
                }


                <br />
                <ul class="listdata" style="margin-left:0px">
                    @if (Model.Speciality != null)
                    {
                        @Model.Speciality
                    }
                </ul>
                <div class="row">
                    <div class="col-sm-10">
                        <div class="star-section visible-sm-inline-block">

                            @{
                                var ratingCount = (int)Math.Floor(Model.ReviewStars);
                                string reviewStr = (Model.ReviewStars == 0 ? "0" : (Model.ReviewStars.ToString("0.0")));
                            }
                            <ul class="star_rate pl-3 mb-2" style="padding: 0px !important;">

                                @*<li class="ReviewCount text-orange" style="font-size: 15px;">@reviewStr</li>*@
                                @for (int i = 0; i < 5; i++)
                                {
                                    if (ratingCount == 0)
                                    {
                                        <li><i class="fa fa-star startColorwhite" style="font-size: 12px;"></i></li>
                                    }
                                    else if (i < ratingCount)
                                    {
                                        <li><i class="fa fa-star text-orange" style="font-size: 12px;"></i></li>
                                    }
                                    else
                                    {
                                        <li><i class="fa fa-star startColorwhite" style="font-size: 12px;"></i></li>
                                    }

                                }
                                <li class="ReviewCount" style="font-size:12px;font-weight:normal">(@Model.ReviewCount &nbsp;Reviews)</li>

                                @*@if (!string.IsNullOrEmpty(Model.PracticeStartDateStr))
                                    {
                                        <sub class="text-dark d-inline-block reviews-sub">(@Model.PracticeStartDateStr)</sub>

                                    }*@
                            </ul>
                        </div>

                    </div>

                </div>

                <div style="border: 1px solid #dee2e6;margin-top: 10px;margin-bottom: 10px;">

                </div>
                <div>
                    <div>
                        @if (string.IsNullOrEmpty(Model.LongDescription))
                        {
                            <p class="parared" style="margin-bottom: unset;">
                                @Html.Raw(Server.HtmlDecode(docLongDesc))
                            </p>
                        }
                        else
                        {
                            <p class="parared" style="margin-bottom: unset;">
                                @Html.Raw(Server.HtmlDecode(docLongDesc))
                                <br />
                         
                            </p>
                        }
                    </div>
                    <div>
                        @{
                            var docAddress = Model.Address1 + " " + Model.Address2 + " " + Model.City + " " + Model.State + " " + Model.Country + " " + Model.ZipCode;
                        }

                    </div>
                </div>
                <br />
                <!--Accordion wrapper-->
                <div class="accordion md-accordion" id="accordionEx" role="tablist" aria-multiselectable="true" style="margin-top: -10px;">


                    <div class="card card-default mb-1 accordianCustHeader">

                        @{
                            var fullAddress1 = Model.Address1 + " " + Model.Address2 + " " + Model.City + " " + Model.State + " " + Model.Country + " " + Model.ZipCode;
                            string addressClass1 = "hkADd" + Model.NPI;
                            string FullAddressCls1 = "adFull" + Model.NPI;
                            string orgIdcls1 = "org" + Model.NPI;
                            string cityNameD1 = !string.IsNullOrWhiteSpace(Model.City) ? cultInfo.ToTitleCase(Model.City.ToLower()) : "";
                            string locationName1 = Model.Address1 + ", " + cityNameD1 + ", " + Model.State + " - " + Model.ZipCode;
                            string childId1 = "acChild0";
                        }
                        <div class="card-header headingFont accHeaderPaddig adressClick" role="tab" id="@addressClass1">
                            <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordionEx" href="#@childId1" aria-expanded="true"
                               aria-controls="collapseOne1">
                                @*<i class="fa fa-caret-down"></i>*@
                                <span class="mb-0 accordiaHeaderbgColor">
                                    @*@add.OrganisationName <i class="fa fa-angle-down rotate-icon"></i>*@
                                    @Model.DoctorName
                                </span>
                            </a>
                        </div>
                        <div id="@childId1" class="collapse show in collapsed" role="tabpanel" aria-labelledby="@addressClass1" data-parent="#accordionEx" style="margin-bottom: -10px !important;">

                            <div class="card-body mb-1 acbody accBodyTop" style="padding-bottom: 17px;">
                                <span>
                                    @*<p>@add.OrganisationName</p>*@
                                    <p><i aria-hidden="true" class="fa fa-map-marker" style="color: #3498db;margin-right:2px"></i><span class="Fulladdress">@Model.Address1  @Model.Address2 @Model.City, @Model.State,@Model.Country,  @Model.ZipCode</span></p>
                                    <p><i class="fa fa-phone" aria-hidden="true" style="color: #3498db;margin-right:2px"></i>@Model.PhoneNumber</p>
                                    <span id="@FullAddressCls1" class="hidden">@fullAddress1</span>
                                    <span id="@orgIdcls1" class="hidden">@Model.OrganisationId</span>
                                </span>

                            </div>
                        </div>

                    </div>

                    @{int count = 1; }
                    @if (Model.lstOrgAddress != null)
                    {
                        foreach (var add in Model.lstOrgAddress.OrderBy(x => x.AddressTypeId))
                        {

                            string hrefId = "#acChild" + count;
                            string childId = "acChild" + count;


                            if (count == 1)
                            {

                                <div class="card card-default mb-1 accordianCustHeader">

                                    @{
                                        var fullAddress = add.Address1 + " " + add.Address2 + " " + add.City + " " + add.State + " " + add.Country + " " + add.ZipCode;
                                        string addressClass = "hkADd" + add.AddressId;
                                        string FullAddressCls = "adFull" + add.AddressId;
                                        string orgIdcls = "org" + add.AddressId;
                                        string cityNameD = !string.IsNullOrWhiteSpace(add.City) ? cultInfo.ToTitleCase(add.City.ToLower()) : "";
                                        string locationName = add.Address1 + ", " + cityNameD + ", " + add.State + " - " + add.ZipCode;
                                    }
                                    <input value="@add.Long" class="Long" type="hidden" />
                                    <input value="@add.Lat" class="Lat" type="hidden" />
                                    <!-- Card header -->
                                    <div class="card-header headingFont accHeaderPaddig adressClick" role="tab" id="@addressClass">
                                        <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordionEx" href="@hrefId" aria-expanded="false"
                                           aria-controls="collapseOne1">
                                            @*<i class="fa fa-caret-down"></i>*@
                                            <span class="mb-0 accordiaHeaderbgColor">
                                                @*@add.OrganisationName <i class="fa fa-angle-down rotate-icon"></i>*@
                                                @locationName
                                            </span>
                                        </a>
                                    </div>


                                    <!-- Card body -->
                                    <div id="@childId" class="collapse" role="tabpanel" aria-labelledby="@addressClass" data-parent="#accordionEx" style="margin-bottom: -10px !important;">

                                        <div class="card-body mb-1 acbody accBodyTop">
                                            <span>
                                                <input type="hidden" value="@Common.GetValidProfileImagePath(add.LogoFilePath)" class="LogoFilePath" />
                                                @*<p>@add.OrganisationName</p>*@
                                                @if (add.OrganisationId > 0)
                                                {
                                                    <p><i class="fa fa-angellist" aria-hidden="true" style="color: #3498db;margin-right:2px"></i><span class="OrganisationName">@add.OrganisationName</span></p>



                                                }
                                                <p><i aria-hidden="true" class="fa fa-map-marker" style="color: #3498db;margin-right:2px"></i><span class="Fulladdress">@add.Address1  @add.Address2 @add.City, @add.State,@add.Country,  @add.ZipCode</span></p>
                                                <p><i class="fa fa-phone" aria-hidden="true" style="color: #3498db;margin-right:2px"></i>@add.Phone</p>
                                                <span id="@FullAddressCls" class="hidden">@fullAddress</span>
                                                <span id="@orgIdcls" class="hidden">@add.OrganisationId</span>

                                                @if (add.OrganisationId > 0)
                                                {
                                                    <a style="color:dodgerblue" href="/Profile/Pharmacy/@add.OrganisationName.Replace("&", "").Replace("&", "").Replace(" ", "-")-@add.OrganisationId" class="practiceWebsite">
                                                        <i class="fa fa-globe" aria-hidden="true" style="margin-left: 10px;color: #3498db;"></i> <span>Practice Websites</span>
                                                    </a>
                                                }
                                                else
                                                {
                                                    <a style="color:dodgerblue" href="#" class="practiceWebsite">
                                                        <i class="fa fa-globe" aria-hidden="true" style="margin-left: 10px;color: #3498db;"></i>  <span>Practice Websites</span>
                                                    </a>
                                                }

                                            </span>
                                            <ul style="margin-left: -30px;margin-bottom:10px">
                                                @if (Model.lstOrgAmenityOptions != null)
                                                {
                                                    foreach (var option in Model.lstOrgAmenityOptions.Where(i => i.OrganizationID == add.OrganisationId && i.IsOption == true))
                                                    {
                                                        if (!string.IsNullOrEmpty(option.ImagePath))
                                                        {
                                                            <li class="fa"><img src="@("/Uploads/AmenityOptions/" + option.ImagePath)" width="20" height="20" alt="Amenity-icon" /> <span style="font-size: 14px;margin-right: 10px;"> @option.Name </span></li>
                                                        }
                                                        else
                                                        {
                                                            <li @*class="fa has-icon icon"*@ style="margin-bottom:10px;"><span><span style="padding: 4px 8px 2px 8px;border-radius: 20%;background-color: rgb(165, 246, 246);color: #e907079e !important;margin-top:2px"><b>@option.Name.Substring(1, 1).ToUpper()</b></span> <span style="font-size: 14px;margin-right: 10px;"> @option.Name </span> </span></li>
                                                        }
                                                    }
                                                }
                                            </ul>
                                        </div>
                                    </div>

                                </div>

                            }
                            else
                            {
                                <div class="card card-default mb-1 accordianCustHeader">
                                    @{
                                        var fullAddress = add.Address1 + " " + add.Address2 + " " + add.City + " " + add.State + " " + add.Country + " " + add.ZipCode;
                                        string addressClass = "hkADd" + add.AddressId;
                                        string FullAddressCls = "adFull" + add.AddressId;
                                        string orgIdcls = "org" + add.AddressId;
                                        string cityNameD = !string.IsNullOrWhiteSpace(add.City) ? cultInfo.ToTitleCase(add.City.ToLower()) : "";
                                        string locationName = add.Address1 + ", " + cityNameD + ", " + @add.State + " - " + add.ZipCode;
                                    }
                                    <!-- Card header -->
                                    <input value="@add.Long" class="Long" type="hidden" />
                                    <input value="@add.Lat" class="Lat" type="hidden" />
                                    <div class="card-header headingFont accHeaderPaddig adressClick" role="tab" id="@addressClass">
                                        <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordionEx" href="@hrefId" aria-expanded="false"
                                           aria-controls="collapseOne1">
                                            @*<i class="fa fa-caret-right"></i>*@
                                            <span class="mb-0 accordiaHeaderbgColor">
                                                @*@add.OrganisationName <i class="fa fa-angle-down rotate-icon"></i>*@
                                                @locationName
                                            </span>
                                        </a>
                                    </div>

                                    <!-- Card body -->
                                    <div id="@childId" class="collapse" role="tabpanel" aria-labelledby="@addressClass" data-parent="#accordionEx" style="margin-bottom: -10px !important;">

                                        <div class="card-body mb-1 acbody accBodyTop">
                                            <span>

                                                @*<p>@add.OrganisationName</p>*@
                                                <p><i class="fa fa-angellist" aria-hidden="true" style="color: #3498db;margin-right:2px"></i><span class="OrganisationName">@add.OrganisationName</span></p>

                                                <input type="hidden" value="@Common.GetValidProfileImagePath(add.LogoFilePath)" class="LogoFilePath" />

                                                <p><i aria-hidden="true" class="fa fa-map-marker" style="color: #3498db;margin-right:2px"></i><span class="Fulladdress">@add.Address1  @add.Address2 @add.City, @add.State,@add.Country,  @add.ZipCode</span></p>
                                                @if (!string.IsNullOrEmpty(add.Phone))
                                                {
                                                    <p><i class="fa fa-phone" aria-hidden="true" style="color: #3498db;margin-right:2px"></i>@add.Phone</p>
                                                }
                                                @*<p><i class="fa fa-phone" aria-hidden="true" style="color: #3498db;margin-right:2px"></i>@add.Phone</p>*@
                                                <span id="@FullAddressCls" class="hidden">@fullAddress</span>
                                                <span id="@orgIdcls" class="hidden">@add.OrganisationId</span>

                                                <a style="color:dodgerblue" href="" class="practiceWebsite">
                                                    <i class="fa fa-globe" aria-hidden="true" style="margin-left: 10px;color: #3498db;"></i>  <span>Practice Websites</span>
                                                </a>
                                            </span>
                                            <ul style="margin-left: -30px;margin-bottom:10px">
                                                @if (Model.lstOrgAmenityOptions != null)
                                                {
                                                    foreach (var option in Model.lstOrgAmenityOptions.Where(i => i.OrganizationID == add.OrganisationId && i.IsOption == true))
                                                    {
                                                        if (!string.IsNullOrEmpty(option.ImagePath))
                                                        {
                                                            <li class="fa"><img src="@("/Uploads/AmenityOptions/" + option.ImagePath)" alt="Amenity-icon" width="20" height="20" /> <span style="font-size: 14px;margin-right: 10px;"> @option.Name </span></li>
                                                        }
                                                        else
                                                        {
                                                            <li @*class="fa has-icon icon"*@ style="margin-bottom:10px;"><span><span style="padding: 4px 8px 2px 8px;border-radius: 20%;background-color: rgb(165, 246, 246);color: #e907079e !important;margin-top:2px"><b>@option.Name.Substring(1, 1).ToUpper()</b></span> <span style="font-size: 14px;margin-right: 10px;"> @option.Name </span> </span></li>
                                                        }
                                                    }
                                                }
                                            </ul>
                                        </div>
                                    </div>

                                </div>
                            }
                            count = count + 1;


                        }
                    }



                </div>

                <div class="tab-content">
                    <div id="AboutMe" class="tab-pane in active">
                        <h3 class="header-title">About Me</h3>
                        <hr />
                        <p>@Html.Raw(Server.HtmlDecode(Model.ShortDescription))</p>

                    </div>
                    <div id="PraticeInformation" class="tab-pane">
                        <h3 class="header-title">Pratice Information</h3>
                        <hr />
                        <p id="AboutMeData">@Html.Raw(Server.HtmlDecode(Model.LongDescription))</p>
                    </div>

                    <div id="ActiveHospital" class="tab-pane">
                        <h3 class="header-title">Active Hospital Affiliations*</h3>
                        <hr />
                        @if (Model.lstDoctorAffiliations != null)
                        {
                            foreach (var item in Model.lstDoctorAffiliations)
                            {
                                <div class="row">
                                    <div class="col-xs-12 col-md-12 col-lg-12" style="font-size: 13px;">
                                        <span style="font-weight:bold"> <i class="fa fa-check" style="color:#3498db"></i> @item.OrganisationName</span>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <div id="InsuranceAccepted" class="tab-pane">
                        <h3 class="header-title">Insurance Accepted</h3>
                        <hr />
                        @if (Model.lstInsuranceAccepted != null)
                        {
                            foreach (var item in Model.lstInsuranceAccepted)
                            {
                                <div class="row">
                                    <div class="col-xs-12 col-md-12 col-lg-12" style="font-size: 13px;">
                                        <i class="fa fa-check" style="color:#3498db"></i>
                                        <span style="font-weight:bold"> @item.InsuranceProviderName</span> <br />
                                        @*</div>
                                            <div class="col-xs-12 col-md-12 col-lg-12" style="font-size: 13px;">*@
                                        <span style="margin-left:17px;"> @item.InsurancePlanName</span> <br />
                                        @*</div>
                                            <div class="col-xs-12 col-md-12 col-lg-12" style="font-size: 13px;">*@
                                        <span style="margin-left:17px;">@Html.Raw(Server.HtmlDecode(item.InsurancePlanDetails))</span>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <div id="Qualifications" class="tab-pane">
                        <h3 class="header-title">Qualifications</h3>
                        <hr />
                        @if (Model.Qualifications != null && Model.Qualifications.Any())
                        {
                            @*<ul>*@
                            foreach (var item in Model.Qualifications.Where(x => x.IsActive && !x.IsDeleted))
                            {
                                @*<li>@item.Degree in @item.PassingYear from @item.Institute</li>*@


                                <p> <i class="fa fa-check" style="color:#3498db;margin-right: 2px;"></i><b>@item.Institute</b>  <span style="margin-left:25px">@item.Degree - @item.PassingYear</span> <span>@item.Notes</span></p>
                                @*<p>@item.Degree - @item.PassingYear </p>
                                    <p>@item.Notes</p>*@

                                @*<p><b>@item.Institute</b></p>
                                    <p>@item.Degree - @item.PassingYear </p>
                                    <p>@item.Notes</p>*@
                            }

                            @*</ul>*@
                        }
                        @*<ul>
                                <li>HIii</li>
                            </ul>*@
                    </div>
                    <div id="Experience" class="tab-pane">
                        <h3 class="header-title">Experience</h3>
                        <hr />
                        @if (Model.Experiences != null && Model.Experiences.Any())
                        {

                            foreach (var item in Model.Experiences)
                            {
                                <div class="row">
                                    <div class="col-xs-12 col-md-7 col-lg-7" style="font-size: 13px;">
                                        <span style="font-weight:bold">@item.Organization</span>
                                    </div>
                                    <div class="col-xs-12 col-md-5 col-lg-5" style="font-size: 13px;">
                                        <span> @item.StartDate</span> -<span>@item.EndDate</span>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12 col-xs-12" style="font-size: 13px;margin-top: -6px;">
                                        <span style="font-weight:bold">@item.Designation</span>
                                    </div>
                                </div>
                                <div class="row" style="margin-top: 10px;">
                                    <div class="col-xs-12 col-md-12 col-lg-12">
                                        <p style="font-size: 14px;">@Html.Raw(Server.HtmlDecode(item.Description))</p>
                                    </div>

                                </div>



                            }

                        }

                    </div>
                    <div id="BoardCertification" class="tab-pane">
                        <h3 class="header-title">Board Certification</h3>
                        <hr />
                        @if (Model.DoctorBoardCertifications != null && Model.DoctorBoardCertifications.Any())
                        {

                            foreach (var item in Model.DoctorBoardCertifications)
                            {
                                if (item.CertificationName != null)
                                {

                                    <p><i class="fa fa-check" style="color:#3498db;margin-right: 2px;"></i><b>@item.CertificationName</b></p>
                                    <p style="margin-left:17px;">@Html.Raw(Server.HtmlDecode(item.Description))</p>
                                }

                            }

                        }

                    </div>
                    <div id="Languages" class="tab-pane">
                        <h3 class="header-title">Languages</h3>
                        <hr />
                        @if (Model.DoctorLanguages != null && Model.DoctorLanguages.Any())
                        {
                            <div class="row">
                                @foreach (var item in Model.DoctorLanguages)
                                {
                                    if (item.LanguageName != null)
                                    {
                                        <div class="col-md-6"><i class="fa fa-check" style="color:#3498db;margin-right: 2px;"></i> @item.LanguageName</div>
                                    }

                                }
                            </div>


                        }

                    </div>
                    <div id="Reviews" class="tab-pane">
                        <div class="row">
                            <div class="col-xs-12 col-md-3">
                                <h3 class="header-title">Reviews</h3>
                            </div>
                            <div class="col-xs-12 col-md-9" style="margin-top: 15px;">
                                <ul class="star_rate pl-3 mb-2">

                                    @*<li class="ReviewCount text-orange">@reviewStr</li>*@
                                    @for (int i = 0; i < 5; i++)
                                    {
                                        if (ratingCount == 0)
                                        {
                                            <li><i class="fa fa-star startColorwhite"></i></li>
                                        }
                                        else if (i < ratingCount)
                                        {
                                            <li><i class="fa fa-star text-orange"></i></li>
                                        }
                                        else
                                        {
                                            <li><i class="fa fa-star startColorwhite"></i></li>
                                        }

                                    }
                                    <li class="ReviewCount" style="font-weight: normal;font-size: 19px;">
                                        @*<span class="reviews" style="font-size:18px">(@Model.ReviewCount</span> &nbsp;<span style="font-size:18px">Reviews)</span>*@
                                        (@Model.ReviewCount &nbsp;Reviews)
                                    </li>
                                </ul>
                            </div>

                        </div>


                        <hr />
                        <!-- Single Comment -->
                        @if (Model.Reviews != null && Model.Reviews.Any())
                        {
                            foreach (var item in Model.Reviews)
                            {

                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="row" style="text-align: center;">
                                            <div class="col-md-12" style="font-size:25px;font-weight:bold">@item.Rating.0</div>
                                            <div class="col-md-12" style="margin-top: -12px;">..........</div>
                                        </div>
                                        <div class="row" style="margin-top: -8px;text-align: center">
                                            <div class="col-md-12">
                                                @for (int i = 1; i <= Convert.ToInt32(item.Rating); i++)
                                                {
                                                    <i class="fa fa-star text-orange" style="font-size: 11px;"></i>
                                                }
                                            </div>

                                        </div>

                                    </div>
                                    <div class="col-md-9">
                                        <div class="row">
                                            <div class="col-md-12">
                                                <span style="font-size: 18px;font-weight: bold;">@Html.Raw(Server.HtmlDecode(item.Description))</span>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-12">
                                                <p><span style="font-size:12px">@item.UserName</span>  &nbsp; <span style="font-size:12px">@item.CreatedDate</span></p>
                                            </div>
                                        </div>

                                    </div>

                                </div>

                            }

                        }

                    </div>
                </div>
                @*@if (Model.lstDoctorAdvertisements != null && Model.lstDoctorAdvertisements.Count > 0)
                    {

                        <div class="row" style="margin-top:100px">
                            <div class="col-md-12">
                                <div id="owl-carousel2" class="three-grid-slider owl-carousel owl-theme owl-rtl owl-loaded">
                                    <div class="owl-stage-outer">
                                        <div class="owl-stage" style="transform: translate3d(1533.33px, 0px, 0px); transition: all 1.2s ease 0s; width: 4600px;">
                                            @foreach (var items in Model.lstDoctorAdvertisements)
                                            {
                                                <div class="owl-item" style="width:373.333px !important; margin-left: 10px !important;padding-right:10px">
                                                    <div class="item">
                                                        <div class="ulockd-testimonials text-center ulockd-mrgn1250 ulockd-mrgn620">
                                                            <div class="testi-thumb">
                                                                <img class="img-responsive thumbnail" src="@(FilePathList.Advertisement + items.ImagePath)" alt="@items.Title">

                                                            </div>
                                                            <div><i class="flaticon-right-quotes-symbol fz30 text-thm2"></i></div>
                                                            <div class="testi-details">

                                                                <h4><small>@items.PaymentTypeName</small></h4>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }


                                        </div>
                                    </div>
                                    <div class="owl-controls">
                                        <div class="owl-nav">
                                            <div class="owl-prev" style="display: none;">
                                                <i class="fa fa-long-arrow-left"></i>
                                            </div>
                                            <div class="owl-next" style="display: none;">
                                                <i class="fa fa-long-arrow-left-right"></i>
                                            </div>
                                        </div>
                                        <div class="owl-dots" style="">
                                            <div class="owl-dot active">
                                                <span></span>
                                            </div>
                                            <div class="owl-dot">
                                                <span></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }*@

            </div>

            <div class="col-xs-12 col-sm-12 col-md-4 col-lg-4 marginBottom150px">
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <div class="card card-default border">
                            <div class="card-body" style="padding: 10px 10px 10px 10px;">
                                <div class="d-inline-flex bd-highlight" style="width: 100%;">

                                    <div id="googleMap" class="image-map"></div>
                                </div>
                                <div class="border" style="margin-top:10px">
                                    <div class="card-body" style="padding: 1.25rem 1.25rem 0.5rem 0rem;">
                                        <div class="d-inline-flex bd-highlight" style="width: 100%;justify-content:center">
                                            <ul class="favSocialIcon">
                                                @{
                                                    Doctyme.Model.SocialMedia socialMedias = new Doctyme.Model.SocialMedia();
                                                    if (Model.SocialMediaLinks != null && Model.SocialMediaLinks.Count > 0)
                                                    {
                                                        socialMedias = Model.SocialMediaLinks.FirstOrDefault();
                                                    }
                                                }
                                                <li>
                                                    @if (string.IsNullOrEmpty(socialMedias.Facebook))
                                                    {
                                                        <a target="_blank"> <i class="fa fa-change fa-change-facebook fa-facebook" style="margin-top: 0px;"></i></a>

                                                    }
                                                    else
                                                    {
                                                        <a target="_blank" href="@(string.IsNullOrEmpty(socialMedias.Facebook) ? "#" : socialMedias.Facebook)"><i class="fa fa-change fa-change-facebook fa-facebook" style="margin-top: 0px;"></i></a>
                                                    }
                                                </li>
                                                @if (string.IsNullOrEmpty(socialMedias.Twitter))
                                                {
                                                    <li><a target="_blank"><i class="fa fa-change fa-change-twitter fa-twitter" style="margin-top: 0px;"></i></a></li>
                                                }
                                                else
                                                {
                                                    <li><a target="_blank" href="@(string.IsNullOrEmpty(socialMedias.Twitter)?"#":socialMedias.Twitter)"><i class="fa fa-change fa-change-twitter fa-twitter" style="margin-top: 0px;"></i></a></li>
                                                }

                                                @if (string.IsNullOrEmpty(socialMedias.LinkedIn))
                                                {
                                                    <li><a target="_blank"><i class="fa fa-change fa-change-linkedin fa-linkedin" style="margin-top: 0px;"></i></a></li>
                                                }
                                                else
                                                {
                                                    <li><a target="_blank" href="@(string.IsNullOrEmpty(socialMedias.LinkedIn)?"#":socialMedias.LinkedIn)"><i class="fa fa-change fa-change-linkedin fa-linkedin" style="margin-top: 0px;"></i></a></li>
                                                }

                                                @if (string.IsNullOrEmpty(socialMedias.Instagram))
                                                {
                                                    <li><a target="_blank"><i class="fa fa-change fa-change-instagram fa-instagram" style="margin-top: 0px;"></i></a></li>
                                                }
                                                else
                                                {
                                                    <li><a target="_blank" href="@(string.IsNullOrEmpty(socialMedias.Instagram)?"#":socialMedias.Instagram)"><i class="fa fa-change fa-change-instagram fa-instagram" style="margin-top: 0px;"></i></a></li>
                                                }

                                                @if (string.IsNullOrEmpty(socialMedias.Youtube))
                                                {
                                                    <li><a target="_blank"><i class="fa fa-change fa-change-youtube fa-youtube" style="margin-top: 0px;"></i></a></li>
                                                }
                                                else
                                                {
                                                    <li><a target="_blank" href="@(string.IsNullOrEmpty(socialMedias.Youtube)?"#":socialMedias.Youtube)"><i class="fa fa-change fa-change-youtube fa-youtube" style="margin-top: 0px;"></i></a></li>
                                                }
                                            </ul>
                                        </div>

                                    </div>
                                </div>

                                @if (Model.IsClaimed != true)
                                {
                                    <div class="border" style="margin-top:10px">
                                        <div class="card-body" style="text-align:center">
                                            <span style="color:#3498db;cursor:pointer" id="btnClaimPractice"> Claim your Practice?</span>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div style="margin-top:10px">
                                        <div class="card-body" style="text-align:center;background-color:#0bda0b26;padding: 10px 10px 10px 10px;">
                                            <span>
                                                <i class="fa fa-check-circle"></i> &nbsp; &nbsp;  Owner Verified Listing
                                            </span>
                                        </div>
                                    </div>
                                }

                            </div>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <div class="card card-default border" style="margin-top:10px">
                            <div class="card-body" style="padding: 5px 1px 0px 1px;">
                                <div class="col-xs-12 col-sm-12">
                                    <div class="mar-rgt social-icon">

                                        <p @*class="margin-lft60"*@ style="margin-bottom: 0px;">
                                            <a class="btn btn-sm btn-primary mrg-tb text-white tabsCustom bgColorForbuttons" style="color:white">Opening Hours</a>

                                            <div class="row" style="justify-content:center">

                                                @if (Model.OpeningHours != null && Model.OpeningHours.Any())
                                                {
                                                    DateTime dateValue = new DateTime(DateTime.UtcNow.Year, DateTime.UtcNow.Month, DateTime.UtcNow.Day);

                                                    int weekNumber = (int)dateValue.DayOfWeek;

                                                    var result = Model.OpeningHours.Where(i => i.WeekDay == weekNumber + 1).FirstOrDefault();
                                                    if (result != null)
                                                    {

                                                        DateTime startDateTIme = DateTime.Parse(result.StartDateTime);
                                                        DateTime endDateTIme = DateTime.Parse(result.EndDateTime);
                                                        int startHour = Convert.ToInt16(startDateTIme.ToString("hh"));
                                                        int startHourNow = Convert.ToInt16(dateValue.ToString("hh"));

                                                        string strMinFormat = startDateTIme.ToString("hh:mm tt");
                                                        string endMinFormat = endDateTIme.ToString("hh:mm tt");


                                                        <span id="spnOpeningHours"><b>@dateValue.ToString("ddd")</b> &nbsp; &nbsp; @strMinFormat - @endMinFormat</span>
                                                    }
                                                    else
                                                    {
                                                        <span id="spnOpeningHours">No time available for today</span>
                                                    }

                                                }
                                                else
                                                {
                                                    <span id="spnOpeningHours">No time available today</span>
                                                }

                                            </div>


                                        </p>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        @if (Model.lstslotsDates != null && Model.lstslotsDates.Count > 0)
                        {
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    @*<div class="col align-self-center">*@
                                    <div id="dvSlottbl" class="card card-default border" style="margin-top:10px">

                                        <div class="card-body" style="padding: 1px 1px 0px 1px !important;">
                                            <div>


                                                <div class="d-flex justify-content-between">
                                                    <div class="p-2 bd-highlight">
                                                        <a class="text-dark" @*href="#table_carousel"*@ data-slide="next" id="btnPrv" style="cursor:pointer">
                                                            <i class="fa fa-chevron-left"></i>
                                                        </a>
                                                    </div>
                                                    <div class="p-2 bd-highlight">
                                                        <div class="table-responsive">
                                                            <table class="table table-bordered tblslot" id="tblSlots" style="table-layout:fixed;margin-bottom: 0px;">
                                                                <thead>
                                                                    <tr class="tsHead">

                                                                        @foreach (var x in Model.lstslotsDates)
                                                                        {
                                                                            @*<th class="p-1 days">
                                                                                    @x.WeekName<p class="small-font m-0">@x.SlotDate </p>
                                                                                </th>*@
                                                                            <th class="p-1 days">
                                                                                @x.displayweek<p class="font-weight-bold small-font m-0">@x.DisplayDate </p>
                                                                            </th>
                                                                        }
                                                                    </tr>
                                                                </thead>
                                                                <tbody>

                                                                    @{


                                                                        string currentDate = DateTime.UtcNow.UtcToUserTime().ToString("yyyy-MM-dd");
                                                                        string currentTime = DateTime.UtcNow.UtcToUserTime().ToString("hh:mm tt");


                                                                        for (int i = 1; i <= Model.Maxslots; i++)
                                                                        {
                                                                            if (i > 10)
                                                                            {
                                                                                <tr class="tsBody hidden tsBodyh">
                                                                                    @foreach (var x in Model.lstslotTimes.Where(j => j.slotTImesRno == i))
                                                                                    {
                                                                                        if (!string.IsNullOrEmpty(x.SlotSatrtTime))
                                                                                        {

                                                                                            string btnsId = "btns" + "" + x.slotTImesRno + "" + x.Rno;
                                                                                            string chkId = "chk" + "" + x.slotTImesRno + "" + x.Rno;
                                                                                            string slotId = "wkDate" + "" + x.slotTImesRno + "" + x.Rno;

                                                                                            if (x.SlotDate == currentDate)
                                                                                            {

                                                                                                if (DateTime.Parse("01/01/2011 " + x.SlotSatrtTime) > DateTime.Parse("01/01/2011 " + currentTime))
                                                                                                {
                                                                                                    if (!x.IsBooked)
                                                                                                    {
                                                                                                        <td class="p-1"><button name="@x.SlotSatrtTime" id="@btnsId" class="btn btn-sm btnHour1 timesSlotsButtons " style="cursor:pointer">@x.SlotSatrtTime <span id="@chkId" class="fa fa-check chkhide hidden"></span><span id="@slotId" class="hidden">@x.SlotDate</span></button></td>
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        <td class="p-1"><button name="@x.SlotSatrtTime" id="@btnsId" class="btn btn-sm  noslotsAvlbuttons cursorNotAllowed">@x.SlotSatrtTime</button></td>
                                                                                                    }
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    <td class="p-1"><button name="@x.SlotSatrtTime" id="@btnsId" class="btn btn-sm  noslotsAvlbuttons cursorNotAllowed">@x.SlotSatrtTime</button></td>
                                                                                                }
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                if (!x.IsBooked)
                                                                                                {
                                                                                                    <td class="p-1"><button name="@x.SlotSatrtTime" id="@btnsId" class="btn btn-sm btnHour1 timesSlotsButtons " style="cursor:pointer">@x.SlotSatrtTime <span id="@chkId" class="fa fa-check chkhide hidden"></span><span id="@slotId" class="hidden">@x.SlotDate</span></button></td>
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    <td class="p-1"><button name="@x.SlotSatrtTime" id="@btnsId" class="btn btn-sm  noslotsAvlbuttons cursorNotAllowed">@x.SlotSatrtTime</button></td>
                                                                                                }
                                                                                            }


                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <td></td>
                                                                                        }

                                                                                    }
                                                                                </tr>
                                                                            }
                                                                            else
                                                                            {
                                                                                <tr class="tsBody">
                                                                                    @foreach (var x in Model.lstslotTimes.Where(j => j.slotTImesRno == i))
                                                                                    {
                                                                                        if (!string.IsNullOrEmpty(x.SlotSatrtTime))
                                                                                        {

                                                                                            string btnsId = "btns" + "" + x.slotTImesRno + "" + x.Rno;
                                                                                            string chkId = "chk" + "" + x.slotTImesRno + "" + x.Rno;
                                                                                            string slotId = "wkDate" + "" + x.slotTImesRno + "" + x.Rno;



                                                                                            if (x.SlotDate == currentDate)
                                                                                            {

                                                                                                if (DateTime.Parse("01/01/2011 " + x.SlotSatrtTime) > DateTime.Parse("01/01/2011 " + currentTime))
                                                                                                {
                                                                                                    if (!x.IsBooked)
                                                                                                    {
                                                                                                        <td class="p-1"><button name="@x.SlotSatrtTime" id="@btnsId" class="btn btn-sm btnHour1 timesSlotsButtons " style="cursor:pointer">@x.SlotSatrtTime <span id="@chkId" class="fa fa-check chkhide hidden"></span><span id="@slotId" class="hidden">@x.SlotDate</span></button></td>
                                                                                                    }
                                                                                                    else
                                                                                                    {
                                                                                                        <td class="p-1"><button name="@x.SlotSatrtTime" id="@btnsId" class="btn btn-sm  noslotsAvlbuttons cursorNotAllowed">@x.SlotSatrtTime</button></td>
                                                                                                    }
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    <td class="p-1"><button name="@x.SlotSatrtTime" id="@btnsId" class="btn btn-sm  noslotsAvlbuttons cursorNotAllowed">@x.SlotSatrtTime</button></td>
                                                                                                }
                                                                                            }
                                                                                            else
                                                                                            {
                                                                                                if (!x.IsBooked)
                                                                                                {
                                                                                                    <td class="p-1"><button name="@x.SlotSatrtTime" id="@btnsId" class="btn btn-sm btnHour1 timesSlotsButtons " style="cursor:pointer">@x.SlotSatrtTime <span id="@chkId" class="fa fa-check chkhide hidden"></span><span id="@slotId" class="hidden">@x.SlotDate</span></button></td>
                                                                                                }
                                                                                                else
                                                                                                {
                                                                                                    <td class="p-1"><button name="@x.SlotSatrtTime" id="@btnsId" class="btn btn-sm  noslotsAvlbuttons cursorNotAllowed">@x.SlotSatrtTime</button></td>
                                                                                                }
                                                                                            }

                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <td></td>
                                                                                        }

                                                                                    }
                                                                                </tr>
                                                                            }


                                                                        }
                                                                        @*if (Model.MaxDays > 10)
                                                                            {
                                                                                <tr class="tsBody hkloadMore" style="text-align: start;">
                                                                                    @{
                                                                                        int colspan = Model.lstslotsDates.Count;
                                                                                    }
                                                                                    <td colspan="@colspan" style="text-align: start;"><a style="font-size:12px;color:blue;cursor:pointer;text-align:start"> Load More...</a></td>

                                                                                </tr>
                                                                            }*@
                                                                        <tr class="tsBody hkloadMore" style="text-align: start;">
                                                                            @{
                                                                                int colspan = Model.lstslotsDates.Count;
                                                                            }
                                                                            <td colspan="@colspan" style="text-align: start;"><a style="font-size:12px;color:blue;cursor:pointer;text-align:start"> Load More...</a></td>

                                                                        </tr>
                                                                    }
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                    <div class="p-2 bd-highlight">
                                                        <a class="text-dark" @*href="#table_carousel"*@ data-slide="prev" id="btnNext" style="cursor:pointer">
                                                            <i class="fa fa-chevron-right"></i>
                                                        </a>
                                                    </div>


                                                    @*<div id="table_carousel" class="carousel slide" data-ride="carousel" data-interval="false">

                                                            <div class="carousel-inner">
                                                                <div class="carousel-item active" style="transition-duration:0.5s;">

                                                                </div>

                                                            </div>
                                                        </div>*@


                                                </div>
                                            </div>

                                        </div>

                                    </div>
                                    @*</div>*@
                                </div>


                            </div>

                            <div class="marginTop" style="margin-top:5px">
                                <input type="button" class="btn btn-sm btn-primary col-md-2 hidden" id="btnNex" value="Next" />
                            </div>
                        }
                        else
                        {
                            <div class="row hidden" id="dvemptySlots">
                                <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                                    <div class="">
                                        <div id="dvSlottbl" class="card card-default border" style="margin-top:10px">

                                            <div class="card-body" style="padding: 1px 1px 0px 1px !important;">
                                                <div>


                                                    <div class="d-flex justify-content-between">
                                                        <div class="p-2 bd-highlight">
                                                            <a class="text-dark hidden" @*href="#table_carousel"*@ data-slide="next" id="btnPrv" style="cursor:pointer">
                                                                <i class="fa fa-chevron-left"></i>
                                                            </a>
                                                        </div>
                                                        <div class="p-2 bd-highlight">
                                                            <div class="table-responsive">
                                                                <table class="table table-bordered tblslot" id="tblSlots" style="table-layout:fixed;margin-bottom: 0px;">
                                                                    <thead></thead>
                                                                    <tbody></tbody>
                                                                </table>
                                                            </div>
                                                        </div>
                                                        <div class="p-2 bd-highlight">
                                                            <a class="text-dark hidden" @*href="#table_carousel"*@ data-slide="prev" id="btnNext" style="cursor:pointer">
                                                                <i class="fa fa-chevron-right"></i>
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>

                                        </div>
                                    </div>
                                </div>


                            </div>
                            <div class="marginTop" style="margin-top:5px">
                                <input type="button" class="btn btn-sm btn-primary col-md-2 hidden" id="btnNex" value="Next" />
                            </div>


                        }
                    </div>

                </div>

            </div>
            @*<div id="div_device" class="panel panel-default">
                    <div class="select">
                        <label for="audioSource">Audio: </label>
                        <select id="audioSource">
                        <option value="default">Default - Microphone (Conexant SmartAudio HD)</option>
                        <option value="communications">Communications - Microphone (Conexant SmartAudio HD)</option>
                        <option value="2f869ffea3abd6f52eef56b9e07dcd7fdd44032ade073656cd3a14d316decc63">Microphone (Conexant SmartAudio HD)</option>
                        </select>
                    </div>
                    <div class="select">
                        <label for="videoSource">Video: </label>
                        <select id="videoSource">
                        <option value="36f7a7fb15b798d9979995a9f8b053a15c28cd597df3a9a4f0866d8bf3f40f0f">EasyCamera (0bda:579a)</option>
                        </select>
                    </div>
                    <div id="div_join" class="col-md-12">
                        <div class="row">
                            <input id="key" type="text" placeholder="Enter App ID" value="0f8f282b530c4232b289867cda582737" size="36" style="display:none;"/>
                            <input id="channel" type="text" value="test" size="4" style="display:none"/>
                            <button id="join" class="btn-primary" width="50px !important" onclick="join()">Call</button> &nbsp;
                            <button id="leave" class="btn-primary" width="50px !important" onclick="leave()">End Call</button> &nbsp;
                            <button id="muteAudio" class="btn-primary" width="50px !important" onclick="muteAudio()">Mute</button> &nbsp;
                            <button id="unmuteAudio" class="btn-primary" width="50px !important" onclick="unmuteAudio()">Unmute</button> &nbsp;
                            <button id="enableVideo" class="btn-primary" width="50px !important" onclick="enableVideo()">Enable Video</button> &nbsp;
                            <button id="disableVideo" class="btn-primary" width="50px !important" onclick="disableVideo()">Disable Video</button>

                        </div>
                    </div>
                    <div id="video" style="margin:0 auto;">
                        <div id="agora_local" style="width:210px;height:147px;display:inline-block;">
                            <iframe id="iframe" style="width:100%; height:100%; border:0;"></iframe>
                        </div>
                    </div>
                    <script src="https://cdn.agora.io/sdk/release/AgoraRTCSDK-3.1.1.js"></script>
                    <script language="javascript">

                        if (!AgoraRTC.checkSystemRequirements()) {
                            alert("browser does not support webRTC");
                        }


                        var client, localStream, camera, microphone;

                        var audioSelect = document.querySelector('select#audioSource');
                        var videoSelect = document.querySelector('select#videoSource');

                        function join() {
                            document.getElementById("join").disabled = true;
                            //document.getElementById("video").disabled = true;
                            var channel_key = null;

                            key.value = '@ViewBag.AgoraKey';

                            console.log("Init AgoraRTC client with vendor key: " + key.value);
                            client = AgoraRTC.createClient({ mode: 'live' });

                            client.init(key.value, function () {
                                console.log("AgoraRTC client initialized");
                                client.join(channel_key, channel.value, null, function (uid) {
                                    console.log("User " + uid + " join channel successfully");

                                    camera = videoSource.value;
                                    microphone = audioSource.value;
                                    localStream = AgoraRTC.createStream({ streamID: uid, audio: true, cameraId: camera, microphoneId: microphone, video: true, screen: false });
                                    //localStream = AgoraRTC.createStream({streamID: uid, audio: false, cameraId: camera, microphoneId: microphone, video: false, screen: true, extensionId: 'minllpmhdgpndnkomcoccfekfegnlikg'});
                                    if (document.getElementById("video").checked) {
                                        localStream.setVideoProfile('720p_3');

                                    }

                                    // The user has granted access to the camera and mic.
                                    localStream.on("accessAllowed", function () {
                                        console.log("accessAllowed");
                                    });

                                    // The user has denied access to the camera and mic.
                                    localStream.on("accessDenied", function () {
                                        console.log("accessDenied");
                                    });

                                    localStream.init(function () {
                                        console.log("getUserMedia successfully");
                                        localStream.play('agora_local');

                                        client.publish(localStream, function (err) {
                                            console.log("Publish local stream error: " + err);
                                        });

                                        client.on('stream-published', function (evt) {
                                            console.log("Publish local stream successfully");

                                            document.write(document.getElementById("iframe_id").contentWindow.location.href);
                                        });
                                    }, function (err) {
                                        console.log("getUserMedia failed", err);
                                    });
                                }, function (err) {
                                    console.log("Join channel failed", err);
                                });
                            }, function (err) {
                                console.log("AgoraRTC client init failed", err);
                            });

                            channelKey = "";
                            client.on('error', function (err) {
                                console.log("Got error msg:", err.reason);
                                if (err.reason === 'DYNAMIC_KEY_TIMEOUT') {
                                    client.renewChannelKey(channelKey, function () {
                                        console.log("Renew channel key successfully");
                                    }, function (err) {
                                        console.log("Renew channel key failed: ", err);
                                    });
                                }
                            });


                            client.on('stream-added', function (evt) {
                                var stream = evt.stream;
                                console.log("New stream added: " + stream.getId());
                                console.log("Subscribe ", stream);
                                client.subscribe(stream, function (err) {
                                    console.log("Subscribe stream failed", err);
                                });
                            });

                            client.on('stream-subscribed', function (evt) {
                                var stream = evt.stream;
                                console.log("Subscribe remote stream successfully: " + stream.getId());
                                if ($('div#video #agora_remote' + stream.getId()).length === 0) {
                                    $('div#video').append('<div id="agora_remote' + stream.getId() + '" style="float:left; width:810px;height:607px;display:inline-block;"></div>');
                                }
                                stream.play('agora_remote' + stream.getId());
                            });

                            client.on('stream-removed', function (evt) {
                                var stream = evt.stream;
                                stream.stop();
                                $('#agora_remote' + stream.getId()).remove();
                                console.log("Remote stream is removed " + stream.getId());
                            });

                            client.on('peer-leave', function (evt) {
                                var stream = evt.stream;
                                if (stream) {
                                    stream.stop();
                                    $('#agora_remote' + stream.getId()).remove();
                                    console.log(evt.uid + " leaved from this channel");
                                }
                            });
                        }

                        function leave() {
                            document.getElementById("leave").disabled = true;
                            client.leave(function () {
                                console.log("Leavel channel successfully");
                            }, function (err) {
                                console.log("Leave channel failed");
                            });
                        }


                        function muteAudio() {
                            document.getElementById("unmuteAudio").disabled = false;
                            document.getElementById("muteAudio").disabled = true;
                            //localStream.disableAudio();
                            localStream.disableAudio();
                        }
                        function unmuteAudio() {
                            document.getElementById("unmuteAudio").disabled = true;
                            document.getElementById("muteAudio").disabled = false;
                            localStream.enableAudio();
                        }

                        function enableVideo() {
                            document.getElementById("disableVideo").disabled = false;
                            document.getElementById("enableVideo").disabled = true;
                            localStream.enableVideo();

                        }
                        function disableVideo() {
                            document.getElementById("disableVideo").disabled = true;
                            document.getElementById("enableVideo").disabled = false;
                            localStream.disableVideo();
                        }

                        function getDevices() {
                            //audioSelect.empty();
                            //videoSelect.empty();

                            AgoraRTC.getDevices(function (devices) {
                                for (var i = 0; i !== devices.length; ++i) {
                                    var device = devices[i];
                                    var option = document.createElement('option');
                                    option.value = device.deviceId;
                                    if (device.kind === 'audioinput') {
                                        option.text = device.label || 'microphone ' + (audioSelect.length + 1);
                                        audioSelect.appendChild(option);
                                    } else if (device.kind === 'videoinput') {
                                        option.text = device.label || 'camera ' + (videoSelect.length + 1);
                                        videoSelect.appendChild(option);
                                    } else {
                                        console.log('Some other kind of source/device: ', device);
                                    }
                                }
                            });
                        }

                        //audioSelect.onchange = getDevices;
                        //videoSelect.onchange = getDevices;
                        getDevices();
                    </script>


                </div>*@
        </div>

        <div id="dvAdSlider">

            @*@Html.Partial("_Advertisement", new ViewDataDictionary { { "AddTypeId", "1" }, { "OrgTypeId", "0" }, { "UserTypeIds", "2" } })*@
        </div>
    </div>
    <input type="hidden" value="@Model.City" id="hdnCity" />
    <input type="hidden" value="@Model.ZipCode" id="hdnZipCode" />

    @if (Model.DoctorImages != null)
    {

        <input type="hidden" id="docProfileimg" value="@Common.GetValidProfileImagePath(Model.DoctorImages.Where(x => x.IsProfile == true).Select(x => x.ImagePath).FirstOrDefault())">
    }
    else
    {
        <input type="hidden" id="docProfileimg" value="@Common.GetValidProfileImagePath("")">
    }
    <input type="hidden" id="docZipCode" value="@Model.ZipCode">
    <input type="hidden" id="docReturUrl" value="@Model.ReturUrl">

</div>
@section scripts {
    @*<script src="~/Scripts/agora.js"></script>*@
    <script src="~/Scripts/client/carousel/owl.carousel.min.js"></script>
    <script type="text/javascript">

        function LoadAds() {

            var hdnCity = $('#hdnCity').val()
            var hdnZipCode = $('#hdnZipCode').val()

            $.ajax({
                url: '@Url.Action("AdsView", "Search" )?AddsPerPage=7&AddTypeId=1&OrgTypeId=0&UserTypeIds=2&City=' + hdnCity + '&Zipcode=' + hdnZipCode,
                    type: 'GET',
                    cache: false,
                    data: { }
}).done(function (result) {

                $("#dvAdSlider").append(result);
            });
        }
        $(document).ready(function () {


            if ($('.collapse.show').length != 0) {
            var cls=  $("#acChild1").parent()
            var href = $(cls).find('.practiceWebsite').text();
            var FullAddress = $(cls).find('.Fulladdress').text();
            var Long = $(cls).find('.Long').val();
            var Lat = $(cls).find('.Lat').val();
            var locationname = $(cls).find('.OrganisationName').text()
            var orgimag = $(cls).find('.LogoFilePath').val()
            var accordiaHeaderbg= $(cls).find('.accordiaHeaderbgColor').text()
            loadLocationByAddRssID(FullAddress, href, locationname, Long, Lat, orgimag, accordiaHeaderbg)

            }
            else {
                DoctorDetailonmap()
            }
            LoadAds();
        })
        var owl = $('#owl-carousel1');
        owl.owlCarousel({
            animateOut: 'slideOutDown',
            animateIn: 'flipInX',
            //autoHeight: true,
            dots: true,
            items: 1,
            loop: true,
            nav: true,
            //infinite: true,
            autoplay: true,
            autoplaySpeed: 100

            //adaptiveHeight: true,
            });
            var owl = $('#owl-carousel2');
            owl.owlCarousel({
                animateOut: 'slideOutDown',
                animateIn: 'flipInX',
                //autoHeight: true,
                dots: true,
                items:3,
                loop: true,
                nav: true,
                infinite: true,
                autoplay: true,
                autoplaySpeed: 100
                //,
                //adaptiveHeight: true,
            });

            $(document).ready(function () {

                //$('.accordion').on('show.bs.collapse', function () {
                //
                //    $(this).find(".card-header").find(".fa").addClass("fa-caret-down").removeClass("fa-caret-right");
                //    //on clicking the accordion menu
                //});

                //$('.accordion').on('hide.bs.collapse', function () {
                //
                //    $(this).find(".card-header").find(".fa").addClass("fa-caret-right").removeClass("fa-caret-down");
                //    //on clicking the accordion menu
                //});

                //$(".collapse").on('show.bs.collapse', function () {
                //    $(this).find(".card-header").find(".fa").addClass("fa-caret-right").removeClass("fa-caret-down");
                //}).on('hide.bs.collapse', function () {
                //    $(this).prev(".card-header").find(".fa").removeClass("fa-minus").addClass("fa-plus");
                //});

           // loadLocation();
        });
        $(document).on("click", ".action", function (e) {

            var flag = $(e.currentTarget).data("flag");
            var id = $(".doctors-profile-area").data("id");
            switch (flag) {
                case "RequestAppointment":
                    RequestAppointment(id);
                default:
            }
            });

        $(document).on("click", ".adressClick", function (e) {
            var attr = $(this).find('a').attr('href');
                var id = $(this).attr('id').replace("hkADd", "").replace(" ", "");
                var hId = $("#lbladdressId").val();
                var clss = $("#acChild1").parent();
                setTimeout(function () {
                    if ($('.collapse.show').length != 0 && attr !='#acChild0')
               {

                    var fulladd = $("#adFull" + id).html();
                    var orgId = $("#org" + id).html();
                    var href = $("#org" + id).parent().find('.practiceWebsite').attr("href")
                    var locationname = $("#org" + id).parent().find('.OrganisationName').text()
                   var orgimag = $(clss).find('.LogoFilePath').val()
                   var accordiaHeaderbg = $(clss).find('.accordiaHeaderbgColor').text()
                    loadLocationByAddRssID(fulladd, href, locationname, orgimag, accordiaHeaderbg);
                    $("#lblOrganizationID").val(orgId);
                    RebindSlots(1);
                    $("#lbladdressId").val(id);
                }
                else
                {
                    DoctorDetailonmap()
                }
                },500)
        });
        function DoctorDetailonmap() {


            var fulladdress = $('#Address1').val() + " " + $('#Address2').val() + " " + $('#DocCity').val() + " " + $('#DocState').val() + " " + $('#DocCountry').val() + " " + $('#DocZipCode').val();
            loadLocationByAddRssID(fulladdress,$('#docReturUrl').val(), $('#hFullDctName').text(),0,0,$('#docProfileimg').val(), "");
        }
        function RequestAppointment(id) {
            $("#modalContent").load("/_RequestAppointment/" + id, function () {
                $("#divModal .modal-dialog").addClass("modal-lg");
                $("#divModal").modal('show');
            });
        }
        $("#lnkAddReview").click(function (e) {
            var id = $(".doctors-profile-area").data("id");
            $("#modalContent").load("/_DoctorReview/" + id, function () {
                $("#divModal").modal('show');
            });
        });

        $("#btnNext").click(function () {

            var MaxCout = parseInt($("#lblMaxDays").val());
            var calCount = parseInt($("#lblcalCount").val());
            $("#btnNex").addClass("hidden");
            if (MaxCout <= calCount) {
                RebindSlots(MaxCout + 3)
            }
            console.log(MaxCout);
        })

        $("#btnPrv").click(function () {

            var MaxCout = parseInt($("#lblMaxDays").val());
            var calCount = parseInt($("#lblcalCount").val());
            $("#btnNex").addClass("hidden");
            if (MaxCout > 1) {
                RebindSlots(MaxCout - 3)
            }
        })

        $(document).on("click", ".btnHour1", function () {

            $(".chkhide").addClass("hidden");
            var id = $(this).attr('id').replace("btns", "").replace(" ", "");
            $("#chk" + id).removeClass("hidden");
            var SlotDate = $("#wkDate" + id).text();
            $("#lblSlotDate").val(SlotDate);
            $("#lblSlotTime").val($(this).attr("name"));
            $("#btnNex").removeClass("hidden");
            $(".btnHour1").removeClass("timesSlotsSelectButtons");
            $(this).addClass("timesSlotsSelectButtons");
        });

        $(document).on("click", ".hkloadMore", function () {
            $(".hkloadMore").addClass("hidden");
            $(".tsBodyh").removeClass("hidden");

        })
        //$(".btnHour").click(function () {
        //
        //    $(".chkhide").addClass("hidden");
        //    var id = $(this).attr('id').replace("btns", "").replace(" ", "");
        //    $("#chk" + id).removeClass("hidden");
        //});

            function RebindSlots(maxDays) {
            $.ajax({
                type: 'GET',
                url: "/GetSlots/",
                data: { MaxDays: maxDays, DoctorId: parseInt($("#lblDoctorId").val()), OrganisationId: $("#lblOrganizationID").val() },
                async: true,
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                    if (response.Data != null) {
                        $("#lblcalCount").val(response.Data.CalenderDatesCount);
                        if (response.Data.OpeningHours != null && response.Data.OpeningHours.length > 0) {
                            $("#spnOpeningHours").html("");

                            if (response.Data.OpeningTime == null) {
                                $("#spnOpeningHours").html("No time available today");
                            }
                            else {
                                $("#spnOpeningHours").append("<b>" + response.Data.OpeningDay + "</b>");
                                $("#spnOpeningHours").append("&nbsp;&nbsp;" + response.Data.OpeningTime);
                            }
                        }
                        else {
                            $("#spnOpeningHours").html("");
                            $("#spnOpeningHours").append("");
                        }
                        if (response.Data.lstslotsDates != null && response.Data.lstslotsDates.length > 0) {


                            $("#dvemptySlots").removeClass("hidden");
                            $("#btnPrv").removeClass("hidden");
                            $("#btnNext").removeClass("hidden");
                            $("#dvSlottbl").removeClass("hidden");
                            $(".tsBody").remove();
                            $(".tsHead").remove();

                            $("#lblMaxDays").val(response.Data.MaxDays);

                            var headerText = "";

                            headerText = "<tr class='tsHead'>"
                            $.each(response.Data.lstslotsDates, function (key, value) {

                                headerText = headerText + "<th class='p-1 days'>" + value.displayweek + "<p class='small-font m-0'>" + value.DisplayDate + " </p></th>";
                            });

                            headerText = headerText + "</tr>"
                            $('#tblSlots').children('thead').append(headerText);

                            var bodyText = "";
                            for (i = 1; i <= response.Data.Maxslots; i++) {


                                var filterednames = response.Data.lstslotTimes.filter(function (obj) {
                                    return (obj.slotTImesRno === i);
                                });

                                if (i <= 10) {
                                    bodyText = bodyText + "<tr class='tsBody'>"
                                    $.each(filterednames, function (key, value) {

                                        if (value.SlotSatrtTime != null && value.SlotSatrtTime != "") {
                                            var btnID = "btns" + "" + value.slotTImesRno + "" + value.Rno;
                                            var checkId = "chk" + "" + value.slotTImesRno + "" + value.Rno;
                                            var slotId = "wkDate" + "" + value.slotTImesRno + "" + value.Rno;
                                            if (!value.IsBooked) {
                                                bodyText = bodyText + "<td class='p-1'><button id='" + btnID + "' name='" + value.SlotSatrtTime + "' class='btn btn-sm btnHour1 timesSlotsButtons' style='cursor: pointer' > " + value.SlotSatrtTime + "<span id='" + checkId + "' class='fa fa-check chkhide hidden'></span><span id='" + slotId + "' class='hidden'>" + value.SlotDate + "</span></button></td > ";
                                            }
                                            else {
                                                bodyText = bodyText + "<td class='p-1'><button id='" + btnID + "' name='" + value.SlotSatrtTime + "' class='btn btn-sm  noslotsAvlbuttons cursorNotAllowed' > " + value.SlotSatrtTime + "</button></td > ";
                                            }
                                        }
                                        else {
                                            bodyText = bodyText + "<td></td>";
                                        }


                                    })
                                    bodyText = bodyText + "</tr>"
                                }
                                else {
                                    bodyText = bodyText + "<tr class='tsBody hidden tsBodyh' >"
                                    $.each(filterednames, function (key, value) {

                                        if (value.SlotSatrtTime != null && value.SlotSatrtTime != "") {
                                            var btnID = "btns" + "" + value.slotTImesRno + "" + value.Rno;
                                            var checkId = "chk" + "" + value.slotTImesRno + "" + value.Rno;
                                            var slotId = "wkDate" + "" + value.slotTImesRno + "" + value.Rno;
                                            if (!value.IsBooked) {
                                                bodyText = bodyText + "<td class='p-1'><button id='" + btnID + "' name='" + value.SlotSatrtTime + "' class='btn btn-sm btnHour1 timesSlotsButtons' style='cursor: pointer' > " + value.SlotSatrtTime + "<span id='" + checkId + "' class='fa fa-check chkhide hidden'></span><span id='" + slotId + "' class='hidden'>" + value.SlotDate + "</span></button></td > ";
                                            }
                                            else {
                                                bodyText = bodyText + "<td class='p-1'><button id='" + btnID + "' name='" + value.SlotSatrtTime + "' class='btn btn-sm  noslotsAvlbuttons cursorNotAllowed' > " + value.SlotSatrtTime + "</button></td > ";
                                            }

                                        }
                                        else {
                                            bodyText = bodyText + "<td></td>";
                                        }


                                    })
                                    bodyText = bodyText + "</tr>"
                                }




                            }

                            if (response.Data.Maxslots > 10) {
                                var colspan = response.Data.lstslotsDates.length;

                                bodyText = bodyText + "<tr class='tsBody hkloadMore'><td colspan='" + colspan+"' style='text-align:start;'><a style='font-size:12px;color:blue;cursor:pointer;text-align:start'> Load More...</a></td></tr>";

                            }
                            $('#tblSlots').children('tbody').append(bodyText);
                        }
                        else {
                            $("#dvSlottbl").addClass("hidden");
                            //$("#spnOpeningHours").html("");
                            //$("#spnOpeningHours").append("");
                            $("#btnPrv").addClass("hidden");
                            $("#btnNext").addClass("hidden");
                            $("#dvemptySlots").addClass("hidden");
                        }
                        // dvSlottbl


                    }
                    else {
                        $("#dvSlottbl").addClass("hidden");
                    }


                },
                error: function (ex) {
                    alert(ex);
                }
            });

        }

        function loadLocation() {
            var geocoder;
            var map;
            var link = "";
            @{
                var address = Model.lstOrgAddress != null ? Model.lstOrgAddress.FirstOrDefault() : null;

                var fulladdress = "";
                if(address !=null)
                {
                    fulladdress = address.Address1 + " " + address.Address2 + " " + address.City + " " + address.State + " " + address.Country + " " + address.ZipCode;
                }

            }

                    var link = $("#org" +"").parent().find('.practiceWebsite').attr("href");
                    var address = "@fulladdress";
                    geocoder = new google.maps.Geocoder();
                    var latlng = new google.maps.LatLng(-34.397, 150.644);
                    var myOptions = {
                    zoom: 15,
                    center: latlng,
                    //mapTypeControl: true,
                    //mapTypeControlOptions: { style: google.maps.MapTypeControlStyle.DROPDOWN_MENU },
                    //navigationControl: true,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                            map = new google.maps.Map(document.getElementById("googleMap"), myOptions);
                            if (geocoder) {
                                geocoder.geocode({ 'address': address }, function (results, status) {
                                    if (status == google.maps.GeocoderStatus.OK) {
                                        if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
                                            map.setCenter(results[0].geometry.location);

                                            var infowindow = new google.maps.InfoWindow(
                                                {
                                          content:  "<div class='card map-container'>" +
                                                "	<div class='row no-gutters'style='margin-bottom: 14px;'>" +
                                                "		<div class='col-auto'>" +
                                                "			<img src='' class='img-fluid' alt=''>" +
                                                "		</div>" +
                                                "		<div class='col'>" +
                                                "			<div class='card-block px-2'>" +
                                                "                  <h4 class='card-title'> <a href='" + link+"'>" + ' @Model.OrganisationName' +"</a></h4>" +
                                                "				<p class='card-text'>" + address + "</p>" +
                                                "			</div>" +
                                                "		</div>" +
                                                "	</div>" +

                                               "</div> ",
                                       // content: '<b>' + address + '</b>',
                                        size: new google.maps.Size(150, 50)
                                                });

                                        var marker = new google.maps.Marker({
                                    position: results[0].geometry.location,
                                    map: map,
                                    title: address
                                            });
                                    google.maps.event.addListener(marker, 'click', function () {
                            infowindow.open(map, marker);
                        });

                            }
                }
                    });
                }
        }

        //     function divcolleps(cls)
        //        {
        //

        //            var locationname = $(cls).find('.OrganisationName').text();
        //            var href = $(cls).find('.practiceWebsite').text();
        //            var FullAddress = $(cls).find('.Fulladdress').text();
        //            var Long = $(cls).find('.Long').val();
        //            var Lat = $(cls).find('.Lat').val();
        //            var orgimag = $(cls).find('.LogoFilePath').val()

        //    var accordiaHeaderbg = $(cls).find('.accordiaHeaderbgColor').text()
        //    loadLocationByAddRssID(FullAddress, href, locationname, Long, Lat, orgimag, accordiaHeaderbg)
        //}

                function loadLocationByAddRssID(FullAddress, href, locationname, Long, Lat, orgimag, accordiaHeaderbg) {
                    var rviewhtml=  $('.star-section').html();

                    var geocoder;
                    var map;

                    var address = FullAddress;
                    geocoder = new google.maps.Geocoder();
                    var latlng = new google.maps.LatLng(parseFloat(Lat), parseFloat(Long));
                    var myOptions = {
                    zoom: 15,
                    center: latlng,
                    //mapTypeControl: true,
                    //mapTypeControlOptions: { style: google.maps.MapTypeControlStyle.DROPDOWN_MENU },
                    //navigationControl: true,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
                map = new google.maps.Map(document.getElementById("googleMap"), myOptions);
                if (geocoder) {
                    geocoder.geocode({ 'address': address }, function (results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {
                            if (status != google.maps.GeocoderStatus.ZERO_RESULTS) {
                                map.setCenter(results[0].geometry.location);

                                var infowindow = new google.maps.InfoWindow(
                                    {

                                        content: "<div class='card map-container'>" +

                                                "	<div class='row no-gutters'style='margin-bottom: 14px;'>" +
                                            "		<div class='col-auto'>" +

                                            "			<img src='" + orgimag+"' class='img-fluid' alt=''>" +
                                            "		</div>" +

                                                "		<div class='col'>" +
                                            "			<div class='card-block px-2'>" +

                                            "                  <h4 class='card-title'> <a href='" + href + "'>" + locationname + "</a></h4>"                                        + rviewhtml.trim() +
                                                "				<p class='card-text'>" + address + "</p>" +
                                                "			</div>" +
                                                "		</div>" +
                                                "	</div>" +

                                               "</div> ",
                                       // content: '<b>' + address + '</b>',
                                        size: new google.maps.Size(150, 50)
                                        //content: '<b>' + address + '</b>',
                                        //size: new google.maps.Size(150, 50)
                            });

                            var marker = new google.maps.Marker({
                                    position: results[0].geometry.location,
                                    map: map,
                                    title: address
                                });
                        google.maps.event.addListener(marker, 'click', function () {
                            infowindow.open(map, marker);
                        });

                    }
                }
                    });
                }
        }
        function CofirmAppoinment() {

                    var SlotCofirmation={
                DoctorId: $("#lblDoctorId").val(),
                OrganisationId: $("#lblOrganizationID").val(),
                SlotDate: $("#lblSlotDate").val(),
                SlotTime: $("#lblSlotTime").val(),
                DoctorName: $("#hFullDctName").html(),
                NPI: $("#lblNPI").val(),
                SlotFor: 'Doctor',
                ReturUrl: '/Profile/Doctor/' + $("#hFullDctName").html().replace("&", "").replace(" ","") + '-' + $("#lblNPI").val()
            }
            $.ajax({
                type: 'POST',
                url: "/rSlotConfirm/",
                data: '{_model: ' + JSON.stringify(SlotCofirmation) + '}',
                async: true,
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                        window.location.href = "@Url.Action("SlotsConfirmation", "ProvdersProfile")";
                    },
                error: function (response) {
                        window.location.href = "@Url.Action("SlotsConfirmation", "ProvdersProfile")";
                    }
                });

            }

              function VerifyClaim() {

                    var ClaimPractice = {
                      ReferenceId: $("#lblDoctorId").val(),
                      OrganizationId: $("#lblOrganizationID").val(),
                      DoctorName: $("#hFullDctName").html(),
                      ClaimType: 'Doctor',
                      Npi: $("#lblNPI").val(),
                      ReturnUrl: '/Profile/Doctor/' + $("#hFullDctName").html().replace("&", "").replace(" ", "") + '-' + $("#lblNPI").val()
                  };
            $.ajax({
                type: 'POST',
                url: "@Url.Action("ClaimPractice", "ProvdersProfile")",
                data: '{_claimPractice: ' + JSON.stringify(ClaimPractice) + '}',
                async: true,
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (response) {
                        if (response != null) {
                            if (response.Data == "Login") {
                                window.location.href = "@Url.Action("ClaimPracticeBusiness", "ProvdersProfile")";
                            }
                            else if (response.Data == "NoLogin") {
                                window.location.href = "@Url.Action("Login", "Account")";
                            }
                            else {

                            }
                        }

                    },
                error: function (response) {
                        alert("Something went wrong." + response);
                    }
                });

            }
            $("#btnClaimPractice").click(function () {

                    VerifyClaim();
                })
        $("#btnNex").click(function () {
                    CofirmAppoinment();
                })

    </script>
}


