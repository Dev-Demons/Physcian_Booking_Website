@model  Binke.ViewModels.OrganisationSpecialityUpdateViewModel
@{
    ViewBag.Title = "Pharmacy Specialities";
}
<style>
    .taxonomy {
        padding: 5px;
        background-color: Highlight;
        color: #fff;
        margin-right: 2px;
    }
</style>
@if (ViewBag.PharmacyID > 0)
{<h4 style="text-align:center;background-color:#f4f6f9;color:#54abd9;transform: translateY(-95px);width:50%;margin-left:20%;margin-bottom:-77px;">@Session["PharmacyName"]</h4>}
<div class="box-header">
    <h4 class="title">
        @(Model.TaxonomyID == 0 ? "Add Pharmacy Speciality" : "Edit Pharmacy Speciality")
    </h4>
</div>


<div class="modal-body">

    @using (Html.BeginForm("AddEditPharmacySpeciality", "Pharmacy", FormMethod.Post, new { id = "frmPharmacySpeciality", @class = "form-horizontal form-bordered" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.TaxonomyID)
        @Html.HiddenFor(model => model.ParentID)



        <div class="row">
            <div class="col-md-12">
                <div class="form-group">

                    <div class="col-md-3 mar-btm">
                        <label class="control-label"><b>Taxonomy Code</b></label>
                        @Html.TextBoxFor(model => model.Taxonomy_Code, new { @class = "form-control", placeholder = "Enter Taxonomy Code" })
                        @Html.ValidationMessageFor(model => model.Taxonomy_Code, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4 mar-btm">
                        <label class="control-label"><b>Parent Specialization</b></label>
                        @Html.TextBox("ParentText", null, new { @class = "form-control", placeholder = "Select Parent Specialization" })
                        @Html.ValidationMessageFor(model => model.ParentID, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-5 mar-btm">
                        <label class="control-label"><b>Specialization</b></label>
                        @Html.TextBoxFor(model => model.Specialization, new { @class = "form-control", placeholder = "Enter Specialization" })
                        @Html.ValidationMessageFor(model => model.Specialization, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4 mar-btm">
                        <label class="control-label"><b>Description</b></label>
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4 mar-btm">
                        <label class="control-label"><b>Taxonomy Type</b></label>
                        @Html.TextAreaFor(model => model.Taxonomy_Type, new { @class = "form-control", placeholder = "Enter Taxonomy Type" })
                        @Html.ValidationMessageFor(model => model.Taxonomy_Type, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-4 mar-btm">
                        <label class="control-label"><b>Taxonomy Level</b></label>
                        @Html.TextAreaFor(model => model.Taxonomy_Level, new { @class = "form-control", placeholder = "Enter Taxonomy Type" })
                        @Html.ValidationMessageFor(model => model.Taxonomy_Level, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-6 mar-btm">
                        <label class="control-label"><b>Specialty Text</b></label>
                        @Html.TextAreaFor(model => model.SpecialtyText, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SpecialtyText, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 mar-btm" style="margin-top:30px;">
                        <label class="control-label"><b>Is Specialty</b></label>
                        <label class="switch">
                            <input type="checkbox" id="IsSpecialty" name="IsSpecialty" dataId="IsSpecialty" value="IsSpecialty" /> &nbsp;
                            <span class="slider round" style="width:35px;"></span> &nbsp;
                        </label>
                        @Html.ValidationMessageFor(model => model.IsSpecialty, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 mar-btm" style="margin-top:30px;">
                        <label class="control-label"><b>Is Active</b></label>
                        <label class="switch">
                            <input type="checkbox" id="IsActive" name="IsActive" dataId="IsActive" value="IsActive" /> &nbsp;
                            <span class="slider round" style="width:35px;"></span> &nbsp;
                        </label>
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-1 mar-btm" style="text-align:right; margin-top:30px;">
                        <button type="button" id="btnSave" class="btn btn-primary">Submit</button>
                    </div>

                </div>
            </div>
        </div>
    }

</div>




@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $.validator.setDefaults({ ignore: null });
    $(document).ready(function () {

    var ID = "@ViewBag.ID";


        if (ID > 0) {

        if ("@Model.IsActive" == 'True') {
            $("#IsActive").prop('checked', true);
            $("#IsActive").val(true);
        }
        else {
            $("#IsActive").prop('checked', false);
            $("#IsActive").val(false);
        }

        if ("@Model.IsSpecialty" == 'True') {
            $("#IsSpecialty").prop('checked', true);
            $("#IsSpecialty").val(true);
        }
        else {
            $("#IsSpecialty").prop('checked', false);
            $("#IsSpecialty").val(false);
        }

    }

    $(document).on('click', '.slider',function () {
        var chekedstatus = $(this).parent().find(":checkbox").is(":checked");
        if (chekedstatus == false)
            $(this).parent().find(":checkbox").val(true);
        else
            $(this).parent().find(":checkbox").val(false);
    });

        $(".disable").prop("disabled", true);


        $("#ParentText").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Pharmacy/GetTaxonomyParentSpecialization",
                        type: "POST",
                        dataType: "json",
                        data: { Prefix: request.term },
                        success: function (data) {
                            if (!data.length) {
                                var result = [
                                    {
                                        label: 'No matches found',
                                        value: response.term
                                    }
                                ];
                                response(result);
                            }
                            else {
                                response($.map(data, function (item) {
                                    return { label: item.Taxonomy_Code + " | " + item.Specialization, value: item.Specialization, dataId: item.TaxonomyID, dataText: item.Taxonomy_Code };
                                }))
                            }
                        },
                        error: function (result) {
                            console.log(result);
                        }
                    })
                },
            select: function (event, ui) {
                $(this).val(ui.item.value);
                $("#ParentID").val(ui.item.dataId);
            }
        });


        $("#Taxonomy_Code").keyup(function () {
            if ($.trim($(this).val()) == "")
                $("#Specialization").val('');
            $("#TaxonomyID").val('');
            $("#ParentID").val('');
        });


        function ValidateSpecialization() {
            var str = $("#Specialization").val();
            str = str.toLowerCase();
            if (~str.indexOf('pharmacy')) {
                return true;
            }
            else {
                alert("Specialization field text should be include 'Pharmacy'");
                return false;
            }
        }


        $("#btnSave").click(function () {
            if (ValidateSpecialization()) {
               // $.validator.unobtrusive.parse($('#frmPharmacySpeciality'));
               // if ($("#frmPharmacySpeciality").valid()) {
                    $.post("@Url.Action("AddEditPharmacySpeciality")", $("#frmPharmacySpeciality").serialize(), function (response) {
                        HandleResponse(response);
                        if (response.Status) {
                            if (response.Status == 1) {
                                window.location.reload();
                            } else {
                                location.reload();
                            }
                        }
                    });
              //  }
            }
            });

    });
</script>
