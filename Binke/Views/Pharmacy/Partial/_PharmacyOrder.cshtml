@model  Binke.ViewModels.OrgPatientOrderUpdateViewModel
@{
    ViewBag.Title = "Pharmacy Patient Order";

    string drugIds = "";
    string dt1 = "";
    if (Model.Date != null)
    {
        dt1 = Model.Date.Value.ToString("MM/dd/yyyy");
    }
}
<style>
    #Image1 {
        line-height: 1.2 !important;
    }
</style>
@if (ViewBag.PharmacyID > 0)
{<h4 style="text-align:center;background-color:#f4f6f9;color:#54abd9;transform: translateY(-95px);width:50%;margin-left:20%;margin-bottom:-77px;">@Session["PharmacyName"]</h4>}

<div class="box-header">
    <h4 class="title">
        @(Model.OrderId == 0 ? "Add Pharmacy Order" : "Edit Pharmacy Order")
    </h4>
</div>

<div class="modal-body">

    @using (Html.BeginForm("AddEditPharmacyOrder", "Pharmacy", FormMethod.Post, new { id = "frmPharmacyOrder", @class = "form-horizontal form-bordered", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.OrderId)
        @Html.HiddenFor(model => model.OrganisationId)
        @Html.HiddenFor(model => model.OrganizationTypeID)
        @Html.HiddenFor(model => model.UserTypeID)
        @Html.HiddenFor(model => model.PatientId)


        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <div class="col-md-12 row">
                        <div class="col-md-6 mar-btm">
                            <label class="control-label"><b>Patient Name</b></label>
                            @Html.TextBoxFor(model => model.FullName, new { @class = "form-control", placeholder = "Enter on Patient firstname, lastname, email or phone no", Title = "Search patient name using first name, last name, email or phone number" })
                            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            @Html.ValidationMessageFor(model => model.PatientId, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 mar-btm">
                            <label class="control-label"><b>Email</b></label>
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 mar-btm">
                            <label class="control-label"><b>Contact No</b></label>
                            @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12 row">
                        <div class="col-md-8 mar-btm">
                            <label class="control-label"><b>Address</b></label>
                            @Html.DropDownListFor(model => model.AddressId, ViewBag.addressList as SelectList, "Select Address", new { @class = "form-control  chosen-select" })
                            @Html.ValidationMessageFor(model => model.AddressId, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4 mar-btm">
                            <label class="control-label"><b>Order Date</b></label>
                            @Html.TextBoxFor(model => model.Date, new { @class = "datefield form-control", placeholder = "Enter Order Date" })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12 row">
                        <div class="col-md-6 mar-btm">
                            <label class="control-label"><b>Title</b></label>
                            @Html.TextBoxFor(model => model.Title, new { @class = "form-control", placeholder = "Enter Title" })
                            @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-6 mar-btm">
                            <label class="control-label"><b>Description</b></label>
                            @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = "Enter Description" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12 row">
                        <div class="col-md-6 mar-btm">
                            <label class="control-label"><b>Insurance Type</b></label>
                            @Html.DropDownListFor(model => model.InsuranceTypeId, ViewBag.typeList as SelectList, "Select Insurance Type", new { @class = "form-control  chosen-select" })
                            @Html.ValidationMessageFor(model => model.InsuranceTypeId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6 mar-btm">
                            <label class="control-label"><b>Insurance Plan</b></label>
                            @Html.DropDownListFor(model => model.InsurancePlanId, ViewBag.planList as SelectList, "Select Insurance Plan", new { @class = "form-control  chosen-select" })
                            @Html.ValidationMessageFor(model => model.InsurancePlanId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12 row" style="border:1px #000 solid;">
                        <div class="col-md-12 row">
                            <div class="col-md-3 mar-btm">
                                <label class="control-label"><b>Drug Name</b></label>
                                @Html.TextBox("txtDrugName", null, new { @class = "form-control" })
                                <input type="hidden" name="DragIdx" id="DragIdx" value="0" />
                            </div>
                            <div class="col-md-3 mar-btm">
                                <label class="control-label"><b>Description</b></label>
                                @Html.TextBox("txtDrugDescription", null, new { @class = "form-control" })
                            </div>
                            <div class="col-md-2 mar-btm">
                                <label class="control-label"><b>Unit Price</b></label>
                                @Html.TextBox("txtUnitPrice", null, new { @class = "form-control" })
                            </div>
                            <div class="col-md-1 mar-btm">
                                <label class="control-label"><b>Qty</b></label>
                                @Html.TextBox("txtQty", null, new { @class = "form-control" })
                            </div>
                            <div class="col-md-1 mar-btm">
                                <label class="control-label"><b>Total</b></label>
                                @Html.TextBox("txtTotal", null, new { @class = "form-control readOnly" })
                            </div>
                            <div class="col-md-2 mar-btm" style="margin-top:35px;">
                                <input type="button" class="btn btn-primary" id="btnDrug" value="Add to List" />
                                <input type="button" class="btn btn-primary" style="display:none" id="btnDrugSave" value="Save" />
                            </div>
                        </div>
                        <div class="col-md-12 mar-btm row" style="text-align:center; padding-left:20px; padding-right:12px;">
                            @Html.ValidationMessageFor(model => model.DragIds, "", new { @class = "text-danger" })
                            <table id="dtOrderInfo" class="table table-striped table-bordered table-hover">
                                <thead>
                                    <tr>
                                        <th>Drug Name</th>
                                        <th>Description</th>
                                        <th>Unit Price</th>
                                        <th>Quantity</th>
                                        <th>Total</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (ViewBag.orderItems != null)
                                    {
                                        foreach (var item in ViewBag.orderItems)
                                        {
                                            var rowId = "row_" + item.DrugId;
                                            if (drugIds == "")
                                            {
                                                drugIds = item.DrugId.ToString();
                                            }
                                            else
                                            {
                                                drugIds += "," + item.DrugId.ToString();
                                            }
                                            <tr id="@rowId" role='row'>
                                                <td><input type='hidden' class='curDetailID' id="DetailId_@item.DrugId" name="DetailId_@item.DrugId" value="@item.OrderDetailId" /><input type='hidden' class='curDrugID' id="DrugId_@item.DrugId" name="DrugId_@item.DrugId" value="@item.DrugId" />@item.DrugName</td>
                                                <td><input type='hidden' id="Description_@item.DrugId" name="Description_@item.DrugId" value="@item.Description" />@item.Description</td>
                                                <td style='text-align:right;'><input type='hidden' id="UnitPrice_@item.DrugId" name="UnitPrice_@item.DrugId" value="@item.UnitPrice" />@item.UnitPrice</td>
                                                <td style='text-align:right;'><input type='hidden' id="qty_@item.DrugId" name="qty_@item.DrugId" value="@item.Quantity" />@item.Quantity</td>
                                                <td style='text-align:right;' class='cellTot'><input type='hidden' id="tot_@item.DrugId" name="tot_@item.DrugId" value="@item.TotalAmount" />@item.TotalAmount</td>
                                                <td style='text-align:center;'><a href='JavaScript:' style='margin-right:5px;' onclick="EditRow(@item.DrugId)" class='btn btn-danger btn-sm action'><i class='fa fa-edit'></i></a><a href='JavaScript:' class='btn btn-danger btn-sm action deleteOrderRow'><i class='fa fa-times'></i></a></td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="col-md-12 row">
                        <div class="col-md-3 mar-btm">
                            <label class="control-label"><b>Total Price</b></label>
                            @Html.TextBoxFor(model => model.TotalPrice, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TotalPrice, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 mar-btm">
                            <label class="control-label"><b>Coupon Discount</b></label>
                            @Html.TextBoxFor(model => model.CouponDiscount, new { @class = "form-control", placeholder = "Enter Coupon Discount" })
                            @Html.ValidationMessageFor(model => model.CouponDiscount, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 mar-btm">
                            <label class="control-label"><b>Other Discount</b></label>
                            @Html.TextBoxFor(model => model.OtherDiscount, new { @class = "form-control", placeholder = "Enter Other Discount" })
                            @Html.ValidationMessageFor(model => model.OtherDiscount, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 mar-btm">
                            <label class="control-label"><b>Net Amount</b></label>
                            @Html.TextBoxFor(model => model.NetPrice, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.NetPrice, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="col-md-12 row">
                        <div class="col-md-3 mar-btm">
                            <label class="control-label"><b>Order Status</b></label>
                            <select name="OrderStatus" id="OrderStatus" class="form-control">
                                <option value="">-Select Status</option>
                                <option value="Submitted">Submitted</option>
                                <option value="In Progress">In Progress</option>
                                <option value="On Hold">On Hold</option>
                                <option value="Completed">Completed</option>
                                <option value="Cancelled">Cancelled</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.OrderStatus, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 mar-btm">
                            <label class="control-label"><b>Prescription</b></label>
                            <input type="file" id="Image1" name="Image1" class="form-control" />
                            @Html.HiddenFor(model => model.PrescriptionImage)
                            @Html.ValidationMessageFor(model => model.PrescriptionImage, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 mar-btm" style="margin-top:30px;">
                            <label class="control-label"><b>Is Active</b></label>
                            <label class="switch">
                                <input type="checkbox" id="IsActive" name="IsActive" dataId="IsActive" value="IsActive" /> &nbsp;
                                <span class="slider round" style="width:35px;"></span> &nbsp;
                            </label>
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 mar-btm" style="text-align:right; margin-top:30px;">
                            <input type="hidden" name="DragIds" id="DragIds" value="@drugIds" />
                            <button type="button" id="btnSave" class="btn btn-primary">Submit</button>
                        </div>
                    </div>

                    @if (Model.PrescriptionImage != null)
                    {
                        <div class="col-md-12 mar-btm" style="text-align:left;">
                            <img src="~/Uploads/PharmacyPrescription/@Model.PrescriptionImage" title="@Model.PrescriptionImage" alt="icon" class="img img-responsive" style="width:100px;height:100px" />
                        </div>
                    }

                </div>
                </div>
        </div>
    }
</div>




@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $.validator.setDefaults({ ignore: null });

    $(function () {
        $('.datefield').datepicker({
            format: 'mm/dd/yyyy',
            prevText: '<i class="fa fa-chevron-left"></i>',
            nextText: '<i class="fa fa-chevron-right"></i>',
            autoclose: true,
            todayHighlight: true
        });
    });



    $(document).ready(function () {
        $('#txtTotal').prop('readonly', true);
        $('#NetPrice').prop('readonly', true);
        $('#PhoneNumber').prop('readonly', true);
        $('#Email').prop('readonly', true);
        

        $("#OrganisationId").val('@ViewBag.PharmacyID');
        $("#OrganizationTypeID").val('1005');
        $("#UserTypeID").val('3');


        $("#InsuranceTypeId").chosen();
        $("#InsuranceTypeId_chosen").css("width", "100%");

        $("#InsurancePlanId").chosen();
        $("#InsurancePlanId_chosen").css("width", "100%");


        $("#AddressId").chosen();
        $("#AddressId_chosen").css("width", "100%");

        $("#Date").val("@dt1");


        var ID = "@ViewBag.ID";

        if (ID > 0) {


            if ("@Model.IsActive" == 'True') {
                $("#IsActive").prop('checked', true);
                $("#IsActive").val(true);
            }
            else {
                $("#IsActive").prop('checked', false);
                $("#IsActive").val(false);
            }


            $("#AddressId").val("@Model.AddressId");
            $("#AddressId").trigger("chosen:updated");

            $("#InsuranceTypeId").val("@Model.InsuranceTypeId")
            $("#InsuranceTypeId").trigger("chosen:updated");

            $("#OrderStatus").val("@Model.OrderStatus");

            getInsurancePlanByType("@Model.InsuranceTypeId", "@Model.InsurancePlanId");
        }

        $(document).on('click', '.slider', function () {
            var chekedstatus = $(this).parent().find(":checkbox").is(":checked");
            if (chekedstatus == false)
                $(this).parent().find(":checkbox").val(true);
            else
                $(this).parent().find(":checkbox").val(false);
        });

        
        $('input[type="file"]').change(function (e) {
            var imageX = e.target.files[0];
            var imgesize = imageX.size;
            var fileName = e.target.files[0].name;

            if (imgesize < 204800) {
                $("#PrescriptionImage").val(fileName);
            }
            else {
                alert("Image size should be less than 200KB");
                $("#PrescriptionImage").val('');
                $("#Image1").val('');
            }

        });

        $("#FullName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Pharmacy/GetPatientName",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        if (!data.length) {
                            var result = [
                                {
                                    label: 'No matches found',
                                    value: response.term
                                }
                            ];
                            response(result);
                        }
                        else {
                            response($.map(data, function (item) {
                                return { label: item.FullName + " | " + item.Email + " | " + item.PhoneNumber, value: item.FullName, dataId: item.PatientId, dataEmail: item.Email, dataContact: item.PhoneNumber, dataAddressId: item.AddressId, dataAddress: item.FullAddress };
                            }))
                        }
                    },
                    error: function (result) {
                        console.log(result);
                    }
                })
            },
            minLength: 2,
            select: function (event, ui) {
                $(this).val(ui.item.label);
                $("#PatientId").val(ui.item.dataId);
                 $("#Email").val(ui.item.dataEmail);
                $("#PhoneNumber").val(ui.item.dataContact);
            }
        });


        $("#txtDrugName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Pharmacy/GetDrugInfo",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        if (!data.length) {
                            var result = [
                                {
                                    label: 'No matches found',
                                    value: response.term
                                }
                            ];
                            response(result);
                        }
                        else {
                            response($.map(data, function (item) {
                                return { label: item.DrugName, value: item.DrugName, dataId: item.DrugId };
                            }))
                        }
                    },
                    error: function (result) {
                        console.log(result);
                    }
                })
            },
            minLength: 2,
            select: function (event, ui) {
                $(this).val(ui.item.label);
                $("#DragIdx").val(ui.item.dataId);
            }
        });


        function AddDrugToList() {
            
            var drugID = $("#DragIdx").val();
            var strName = $("#txtDrugName").val();
            var strDes = $("#txtDrugDescription").val();
            var UPrice = $("#txtUnitPrice").val();
            var qty = $("#txtQty").val();
            var tot = $("#txtTotal").val();
            var errMsg = "";
            var flag = true;

             if (parseInt(drugID) > 0 && $.trim(strName) != "" && parseFloat(tot) > 0) {
                var objCell = "";
                var rowID = "row_" + drugID;
                 var Ids = $("#DragIds").val();
                 var IdsArray = $("#DragIds").val().split(",");
                 if (Ids == "") {
                     $("#DragIds").val(drugID)
                 }
                 else {
                     $.map(IdsArray, function (a) {
                         if (a == drugID)
                             flag = false;
                     });

                     if (flag == false) {
                         alert("Drag already exsits!");
                     }
                     else {
                         Ids += "," + drugID;
                         $("#DragIds").val(Ids);
                     }
                 }
                
                 if (flag == true)
                 {
                     var orderRow = "<tr id='" + rowID + "' role='row'></tr>";
                     $("#dtOrderInfo tbody").append(orderRow);

                     objCell = "<td><input type='hidden' class='curDetailID' id='DetailId_" + drugID + "' name='DetailId_" + drugID + "' value='0' /><input type='hidden' class='curDrugID' id='DrugId_" + drugID + "' name='DrugId_" + drugID + "' value='" + drugID + "' /><span id='DrugName_" + drugID+"'>" + strName + "</span></td>";
                     objCell += "<td><input type='hidden' id='Description_" + drugID + "' name='Description_" + drugID + "' value='" + strDes + "' /><span id='lblDescription_" + drugID+"'>" + strDes + "</span></td>";
                     objCell += "<td style='text-align:right;'><input type='hidden' id='UnitPrice_" + drugID + "' name='UnitPrice_" + drugID + "' value='" + UPrice + "' /><span id='lblUnitPrice_" + drugID + "'>" + UPrice + "</span></td>";
                     objCell += "<td style='text-align:right;'><input type='hidden' id='qty_" + drugID + "' name='qty_" + drugID + "' value='" + qty + "' /><span id='lblqty_" + drugID + "'>" + qty + "</span></td>";
                     objCell += "<td style='text-align:right;' class='cellTot'><input type='hidden' id='tot_" + drugID + "' name='tot_" + drugID + "' value='" + tot + "' /><span id='lbltot_" + drugID + "'>" + tot + "</span></td>";
                     objCell += "<td style='text-align:center;'><a href='JavaScript: ' id='btnEdit_" + drugID+"'  data-toggle='tooltip' style='margin-right:5px;'  class='btn btn-success btn-sm'><i class='fa fa-edit'></i></a><a href='JavaScript:' class='btn btn-danger btn-sm action deleteOrderRow'><i class='fa fa-times'></i></a></td>";

                     $("#dtOrderInfo #" + rowID).append(objCell);
                     $('#btnEdit_' + drugID).on('click', function () {
                         $("#DragIdx").val($("#DrugId_" + drugID).val());
                         $("#txtDrugName").val($("#DrugName_" + drugID).text());
                         $("#txtDrugName").change();
                         $("#txtDrugDescription").val($("#Description_" + drugID).val());
                         $("#txtUnitPrice").val($("#UnitPrice_" + drugID).val());
                         $("#txtQty").val($("#qty_" + drugID).val());
                         $("#txtTotal").val($("#tot_" + drugID).val());
                         $('#btnDrugSave').show();
                         $('#btnDrug').hide();
                     })
                     var totAll = $("#TotalPrice").val();
                     if (parseFloat(totAll) > 0)
                         totAll = $("#TotalPrice").val();
                     else
                         totAll = 0;

                     var newTot = parseFloat(totAll) + parseFloat(tot);
                     $("#TotalPrice").val(newTot.toFixed(2));
                     CalculateNett();
                 }
                     $("#DragIdx").val('0');
                     $("#txtDrugName").val('');
                     $("#txtDrugDescription").val('');
                     $("#txtUnitPrice").val('');
                     $("#txtQty").val('');
                     $("#txtTotal").val('');
            }
            else {
                if (parseInt(drugID) == 0)
                    errMsg = "Select correct drug! \n";
                if (!parseFloat(tot) > 0)
                    errMsg += "Enter correct unit price and qty! \n";

                alert(errMsg);
            }
        }
        var EditRow = function (id) {
             $("#DragIdx").val($("#DrugId_" + id).val());
             $("#txtDrugName").val($("#DrugId_" + id).text());
            
             $("#txtDrugDescription").val($("#Description_" + id).val());
             $("#txtUnitPrice").val($("#UnitPrice_" + id).val());
             $("#txtQty").val($("#qty_" + id).val());
             $("#txtTotal").val($("#tot_" + id).val());
             $('#btnDrugSave').show();
            $('#btnDrug').hide();

        }
        $('#btnDrugSave').on("click", function () {
            var ids = $("#DragIdx").val();
            $("#DrugId_" + ids).val($("#DragIdx").val());
            $("#DrugId_" + ids).text($("#txtDrugName").val());
            $("#DragIdx").val('0');
            $("#txtDrugName").val('');
            $("#Description_" + ids).val($("#txtDrugDescription").val());
         
            $("#lblDescription_" + ids).text($("#txtDrugDescription").val());
            $("#txtDrugDescription").val('');
            $("#UnitPrice_" + ids).val($("#txtUnitPrice").val());
            $("#lblUnitPrice_" + ids).text($("#txtUnitPrice").val());
            $("#txtUnitPrice").val('');
            $("#qty_" + ids).val($("#txtQty").val());
            $("#lblqty_" + ids).text($("#txtQty").val());
            $("#txtQty").val('');
            $("#tot_" + ids).val($("#txtTotal").val());
            $("#lbltot_" + ids).text($("#txtTotal").val());
            $("#txtTotal").val('');
            $('#btnDrugSave').hide();
            $('#btnDrug').show();
        });
        $(document).on('click', '.deleteOrderRow', function () {
            var rowTot = $(this).parent().parent().find('.cellTot').text();
            var detailsId = $(this).parent().parent().find('.curDetailID').val();

            var tot = $("#TotalPrice").val();

            var drugId = $(this).parent().parent().find('.curDrugID').val();

            var title = "Delete Order Item ?";
            var message = "Are you sure you want to remove this Order item ?";
            BinkeDialog.Confirmation(title, message, function () {

                if (parseInt(detailsId) > 0)
                {
                        $.ajax({
                        url: "/DeletePharmacyOrderItem/" + parseInt(detailsId),
                        type: "POST",
                        contentType: false,
                        cache: false,
                        processData: false,
                        success: function (data) {
                            HandleResponse(data);
                            closeModal();
                        },
                        error: function (data) {
                            HandleResponse(data);
                        }
                    });
                }

               
                var newTot = parseFloat(tot) - parseFloat(rowTot);
                $("#TotalPrice").val(newTot.toFixed(2));
                CalculateNett();

                
                var IdsArray = $("#DragIds").val().split(",");

                var newArrayItems = $.grep(IdsArray, function (value) {
                    return value != drugId;
                });

                $("#DragIds").val(newArrayItems);

                $("#dtOrderInfo #row_" + drugId).remove();
            });
        });

        function CalculateNett() {
            var tot = $("#TotalPrice").val();
            var discount1 = $("#CouponDiscount").val();
            var discount2 = $("#OtherDiscount").val();
            var net = 0;
            if (parseFloat(tot) > 0) {
                net = tot;
                if (parseFloat(discount1) > 0)
                    discount1 = parseFloat(discount1);
                else
                    discount1 = 0;

                if (parseFloat(discount2) > 0)
                    discount2 = parseFloat(discount2);
                else
                    discount2 = 0;

                var totDiscount = parseFloat(discount1) + parseFloat(discount2);

                if (parseFloat(totDiscount) > parseFloat(tot)) {
                    alert("Total discount should be less than or equal Total Amount");
                    $("#NetPrice").val('');
                }
                else {
                    net = parseFloat(tot) - parseFloat(totDiscount);
                    $("#NetPrice").val(net.toFixed(2));
                }
            }
            else {
                $("#NetPrice").val('');
            }
        }

        $("#TotalPrice").keyup(function () {
            CalculateNett();
        });

        $("#CouponDiscount").keyup(function () {
            CalculateNett();
        });

        $("#OtherDiscount").keyup(function () {
            CalculateNett();
        });

        $("#btnDrug").click(function () {
            AddDrugToList();
        });

        $("#txtUnitPrice").keyup(function () {
            var price = $(this).val();
            var qty = $("#txtQty").val();

            var tot = 0;
            if (parseInt(qty) >= 0 && parseFloat(price) >= 0) {
                tot = parseFloat(price) * parseFloat(qty);
            }
            $("#txtTotal").val(tot.toFixed(2));
        })

        $("#txtQty").keyup(function () {
            var price = $(this).val();
            var qty = $("#txtUnitPrice").val();

            var tot = 0;
            if (parseInt(qty) >= 0 && parseFloat(price) >= 0) {
                tot = parseFloat(price) * parseFloat(qty);
            }
            $("#txtTotal").val(tot.toFixed(2));
        })

        //function getAddress(ReferenceId) {
        //    $.ajax({
        //        url: "/Pharmacy/GetReferenceAddress",
        //        type: "POST",
        //        dataType: "json",
        //        data: { ReferenceId: ReferenceId, UserTypeId: 3 },
        //        success: function (data) {
        //            if (data.length > 0)
        //            {
        //                $("#AddressId option").remove();
        //                var options = '';
        //                options += '<option value="0">Select Address</option>';
        //                for (var i = 0; i < data.length; i++) {
        //                    options += '<option value="' + data[i].AddressId + '">' + data[i].Address1 + ' ' + data[i].Address2 + ' ' + data[i].ZipCode + ' ' + data[i].City + ' ' + data[i].State + ' ' + data[i].Country + '</option>';
        //                }
        //                $('#AddressId').html(options);
        //            }

        //        }
        //    });
        //}

        $("#InsuranceTypeId").change(function () {
                $("#InsurancePlanId option").remove();
                $('#InsurancePlanId').html('<option value="">Select Plan</option>');
                $("#InsurancePlanId").trigger("chosen:updated");
            $.ajax({
                url: "/Pharmacy/GetOrgInsurancePlanByTypeId",
                type: "POST",
                dataType: "json",
                data: { ReferenceId:"@ViewBag.PharmacyID", TypeId: $(this).val() },
                success: function (data) {

                    $("#InsurancePlanId option").remove();
                    var options = '';
                    options += '<option value="">Select Plan</option>';
                    for (var i = 0; i < data.length; i++) {
                        options += '<option value="' + data[i].InsurancePlanId + '">' + data[i].Name + '</option>';
                    }
                    $('#InsurancePlanId').html(options);

                    $("#InsurancePlanId").trigger("chosen:updated");
                }
            });
        });

        function getInsurancePlanByType(TypeId, PlanId) {
            $.ajax({
                url: "/Pharmacy/GetOrgInsurancePlanByTypeId",
                type: "POST",
                dataType: "json",
                data: { ReferenceId:"@ViewBag.PharmacyID", TypeId: TypeId },
                success: function (data) {

                    $("#InsurancePlanId option").remove();
                    var options = '';
                    options += '<option value="">Select Plan</option>';
                    for (var i = 0; i < data.length; i++) {
                        options += '<option value="' + data[i].InsurancePlanId + '">' + data[i].Name + '</option>';
                    }
                    $('#InsurancePlanId').html(options);

                    if (PlanId != "") {
                        $('#InsurancePlanId').val(PlanId);
                    }

                    $("#InsurancePlanId").trigger("chosen:updated");
                }
            });
        }


        $("#btnSave").click(function () {
            $.validator.unobtrusive.parse($('#frmPharmacyOrder'));
            if ($("#frmPharmacyOrder").valid()) {
                var form = $('#frmPharmacyOrder')[0];
                    var formData = new FormData(form);
                    $.ajax({
                        url: "@Url.Action("AddEditPharmacyOrder")",
                        type: form.method,
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            HandleResponse(response);
                                if (response.Status == 1) {
                                    window.location.reload();
                                } else {
                                    location.reload();
                                }
                        },
                        error: function (result) {
                            console.log(result);
                        }
                    });
                }
            });

    });
</script>
