@model Binke.ViewModels.OrgReviewUpdateViewModel
@{
    ViewBag.Title = "Pharmacy Reviews";
}
@if (ViewBag.PharmacyID > 0)
{<h4 style="text-align:center;background-color:#f4f6f9;color:#54abd9;transform: translateY(-95px);width:50%;margin-left:20%;margin-bottom:-77px;">@Session["PharmacyName"]</h4>}
<div class="box-header">
    <h4 class="title">
        @(Model.ReviewId == 0 ? "Add Pharmacy Review" : "Edit Pharmacy Review")
    </h4>
</div>

<div class="modal-body">

    @using (Html.BeginForm("AddEditPharmacyReview", "Pharmacy", FormMethod.Post, new { id = "frmPharmacyReview", @class = "form-horizontal form-bordered" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.ReviewId)
        @Html.HiddenFor(model => model.OrganisationId)

        @Html.HiddenFor(model => model.OrganizatonTypeID)
        @Html.HiddenFor(model => model.UserTypeID)


        <div class="row">
            <div class="col-md-12">
                <div class="form-group">


                    <div class="col-md-8 mar-btm">
                        <label class="control-label"><b>Review</b></label>
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = "Enter Review" })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.OrganisationName, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.OrganizatonTypeID, "", new { @class = "text-danger" })
                    </div>


                    <div class="col-md-1 mar-btm">
                        <label class="control-label"><b>Rating</b></label>
                        <select name="Rating" id="Rating" class="form-control">
                            <option value="0">0</option>
                            <option value="1">1</option>
                            <option value="2">2</option>
                            <option value="3">3</option>
                            <option value="4">4</option>
                            <option value="5">5</option>
                        </select>
                        @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 mar-btm" style="margin-top:30px;">
                        <label class="control-label"><b>Is Active</b></label>
                        <label class="switch">
                            <input type="checkbox" id="IsActive" name="IsActive" dataId="IsActive" value="IsActive" /> &nbsp;
                            <span class="slider round" style="width:35px;"></span> &nbsp;
                        </label>
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-1 mar-btm" style="text-align:right; margin-top:30px;">
                        <button type="button" id="btnSave" class="btn btn-primary">Submit</button>
                    </div>

                </div>
            </div>
        </div>
    }

</div>




@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $.validator.setDefaults({ ignore: null });

    $("#OrganisationId").val('@ViewBag.PharmacyID');
    $("#OrganizatonTypeID").val('1005');
            $("#UserTypeID").val('3');

            var ID = "@ViewBag.ID";

            if (ID > 0) {
                $("#Rating").val("@Model.Rating");
    }

    $(".disable").prop("disabled", true);

    if (ID > 0) {
        
        if ("@Model.IsActive" == 'True') {
            $("#IsActive").prop('checked', true);
            $("#IsActive").val(true);
        }
        else {
            $("#IsActive").prop('checked', false);
            $("#IsActive").val(false);
        }
    }

    $(document).on('click', '.slider',function () {
        var chekedstatus = $(this).parent().find(":checkbox").is(":checked");
        if (chekedstatus == false)
            $(this).parent().find(":checkbox").val(true);
        else
            $(this).parent().find(":checkbox").val(false);
    });

    
    function ClearAll() {
        $('input:text').each(function () {
            $(this).val('');
        });
        $('input:checkbox').each(function () {
            $(this).prop('checked', false);
        });
    }


            $("#btnSave").click(function () {
                $.validator.unobtrusive.parse($('#frmPharmacyReview'));
                if ($("#frmPharmacyReview").valid()) {
                    var form = $('#frmPharmacyReview')[0];
                    var formData = new FormData(form);
                    $.ajax({
                        url: "@Url.Action("AddEditPharmacyReview")",
                        type: form.method,
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            HandleResponse(response);
                                if (response.Status == 1) {
                                    window.location.reload();
                                } else {
                                    location.reload();
                                }
                        },
                        error: function (result) {
                            console.log(result);
                        }
                    });
                }
            });


</script>
