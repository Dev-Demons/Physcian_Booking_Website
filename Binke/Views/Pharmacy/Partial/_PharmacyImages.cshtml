@model Binke.ViewModels.OrgSiteImageUpdateViewModel
@{
    ViewBag.Title = "Pharmacy Site Images";
}
<style>
    #Image1 {
        line-height: 1.2 !important;
    }
</style>
@if (ViewBag.PharmacyID > 0)
{<h4 style="text-align:center;background-color:#f4f6f9;color:#54abd9;transform: translateY(-95px);width:50%;margin-left:20%;margin-bottom:-77px;">@Session["PharmacyName"]</h4>}
<div class="box-header">
    <h4 class="title">
        @(Model.SiteImageId == 0 ? "Add Pharmacy Image" : "Edit Pharmacy Image")
    </h4>
</div>

<div class="modal-body">

    @using (Html.BeginForm("AddEditPharmacyImage", "Pharmacy", FormMethod.Post, new { id = "frmPharmacyImage", @class = "form-horizontal form-bordered", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.SiteImageId)
        @Html.HiddenFor(model => model.OrganisationId)

        @Html.HiddenFor(model => model.OrganizatonTypeID)
        @Html.HiddenFor(model => model.UserTypeID)


        <div class="row">
            <div class="col-md-12">
                <div class="form-group">

                    <div class="col-md-4 mar-btm">
                        <label class="control-label"><b>Name</b></label>
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", placeholder = "Enter Name" })
                        @Html.ValidationMessageFor(model => model.OrganisationName, "", new { @class = "text-danger" })
                        @Html.ValidationMessageFor(model => model.OrganisationId, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3 mar-btm">
                        <label class="control-label"><b>Image</b></label>
                        <input type="file" id="Image1" name="Image1" class="form-control" />
                        @Html.HiddenFor(model => model.ImagePath)
                        @Html.ValidationMessageFor(model => model.ImagePath, "", new { @class = "text-danger" })
                    </div>


                    <div class="col-md-2 mar-btm" style="margin-top:30px;">
                        <label class="control-label"><b>Is Profile</b></label>
                        <label class="switch">
                            <input type="checkbox" id="IsProfile" name="IsProfile" dataId="IsProfile" value="IsProfile" /> &nbsp;
                            <span class="slider round" style="width:35px;"></span> &nbsp;
                        </label>
                        @Html.ValidationMessageFor(model => model.IsProfile, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2 mar-btm" style="margin-top:30px;">
                        <label class="control-label"><b>Is Active</b></label>
                        <label class="switch">
                            <input type="checkbox" id="IsActive" name="IsActive" dataId="IsActive" value="IsActive" /> &nbsp;
                            <span class="slider round" style="width:35px;"></span> &nbsp;
                        </label>
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-1 mar-btm" style="text-align:right; margin-top:30px;">
                        <button type="button" id="btnSave" class="btn btn-primary">Submit</button>
                    </div>

                    @if (Model.ImagePath != null)
                    {
                        <div class="col-md-12 mar-btm" style="text-align:center;">
                            <img src="~/Uploads/PharmacySiteImages/@Model.ImagePath" title="@Model.ImagePath" style="max-height:50px; text-align:left;" alt="icon"/>
                        </div>
                    }

                </div>
            </div>
        </div>
    }
</div>




@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $.validator.setDefaults({ ignore: null });

    $("#OrganisationId").val('@ViewBag.PharmacyID');
    $("#OrganizatonTypeID").val('1005');
    $("#UserTypeID").val('3');

    

    var ID = "@ViewBag.ID";

    if (ID > 0) {
        
        if ("@Model.IsActive" == 'True') {
            $("#IsActive").prop('checked', true);
            $("#IsActive").val(true);
        }
        else {
            $("#IsActive").prop('checked', false);
            $("#IsActive").val(false);
        }

        if ("@Model.IsProfile" == 'True') {
            $("#IsProfile").prop('checked', true);
            $("#IsProfile").val(true);
        }
        else {
            $("#IsProfile").prop('checked', false);
            $("#IsProfile").val(false);
        }
        
    }

    $(document).on('click', '.slider',function () {
        var chekedstatus = $(this).parent().find(":checkbox").is(":checked");
        if (chekedstatus == false)
            $(this).parent().find(":checkbox").val(true);
        else
            $(this).parent().find(":checkbox").val(false);
    });


    $('input[type="file"]').change(function (e) {
        var imageX = e.target.files[0];
        var imgesize = imageX.size;
        var fileName = e.target.files[0].name;

        if (imgesize < 5242880) {
            let img = new Image()
            img.src = window.URL.createObjectURL(imageX)

            img.onload = () => {
                $("#ImagePath").val(fileName);
                //w = img.width;
                //h = img.height;
                //if (w <= 50 && h <= 50) {
                //    $("#ImagePath").val(fileName);
                //}
                //else {
                //    alert("Image width and height should be less than or equal 50px");
                //    $("#ImagePath").val('');
                //    $("#Image1").val('');
                //}
            }
        }
        else {
            alert("Image size should be less than 5MB");
            $("#ImagePath").val('');
            $("#Image1").val('');
        }

    });

    function ClearAll() {
        $('input:text').each(function () {
            $(this).val('');
        });
        $('input:checkbox').each(function () {
            $(this).prop('checked', false);
        });
    }


            $("#btnSave").click(function () {
                $.validator.unobtrusive.parse($('#frmPharmacyImage'));
                if ($("#frmPharmacyImage").valid()) {
                    var form = $('#frmPharmacyImage')[0];
                    var formData = new FormData(form);
                    $.ajax({
                        url: "@Url.Action("AddEditPharmacySiteImage")",
                        type: form.method,
                        data: formData,
                        processData: false,
                        contentType: false,
                        success: function (response) {
                            HandleResponse(response);
                                if (response.Status == 1) {
                                   // bindPharmacyImagesList(true, CurrentPageStart());
                                    window.location.reload();
                                } else {
                                    location.reload();
                                }
                        },
                        error: function (result) {
                            console.log(result);
                        }
                    });
                }
            });


</script>
