@model Binke.ViewModels.BoardCertificationViewModel

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
        &times;
    </button>
    <h4 class="modal-title" id="myModalLabel">
        @(Model.Id == 0 ? "Add Board Certification" : "Edit Board Certification")
    </h4>
</div>
<div class="modal-body">
    @using (Html.BeginForm("AddEditBoardCertification", "BoardCertification", FormMethod.Post, new { id = "frmBoardCertification" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.SpecialityId)
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.TextBoxFor(m => m.CertificationName, new { @class = "form-control", placeholder = "Enter Board Certification" })
                    @Html.ValidationMessageFor(m => m.CertificationName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

    }
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
    <button type="button" id="btnSave" class="btn btn-primary">Submit</button>
</div>
<script type="text/javascript">
    $("#btnSave").click(function() {
        $.validator.unobtrusive.parse($('#frmBoardCertification'));
        if ($("#frmBoardCertification").valid()) {
            $.post("@Url.Action("AddEditBoardCertification")", $("#frmBoardCertification").serialize(), function (response) {
                HandleResponse(response);
                if (response.Status) {
                    bindBoardCertificationList();
                    closeModal();
                }
            });
        }
    });
</script>