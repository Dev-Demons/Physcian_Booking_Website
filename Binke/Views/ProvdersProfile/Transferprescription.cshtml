@using Binke.ViewModels
@model PatientPrescription
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    string drugIds = "";
    ViewBag.Title = "TransferPrescription";
}
<style type="text/css">
    .label:after {
        content: '\A';
        white-space: pre;
    }
</style>

<div class="container mt-4 mb-5">
    <div class="row">
        <div class="col-lg-12">
            <div class="panel">
                <div class="panel-heading">
                    <h3 class="panel-title">Contact Information</h3>
                </div>
                <!--No Label Form-->
                <!--===================================================-->
                @using (Html.BeginForm("TransferPrescription", "Patient", FormMethod.Post, new { id = "frmTransferPres", @class = "form-horizontal form-bordered" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(x => x.PatientId)
                    @Html.HiddenFor(x => x.PatientId)
                    @Html.HiddenFor(x => x.Address)
                    <div class="container">
                        <div class="row">
                            <div class="col-md-12 row">
                                <div class="col-lg-6">
                                    <div class="panel">
                                        <form class="form-horizontal">
                                            <div class="form-group">
                                                <label class="col-xs-1 control-label doger-color" for="FirstName">First Name: &nbsp;</label>
                                                @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control", placeholder = "First Name", @readonly = "true", name = "FirstName" })
                                                @Html.ValidationMessageFor(x => x.FirstName, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                <label class="col-xs-1 control-label doger-color" for="LastName">Last Name: </label>
                                                @Html.TextBoxFor(x => x.LastName, new { @class = "form-control", placeholder = "Last Name", @readonly = "true" })
                                                @Html.ValidationMessageFor(x => x.LastName, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                <label class="col-xs-1 control-label doger-color" for="Gender">Gender: </label>
                                                @Html.TextBoxFor(x => x.Gender, new { @class = "form-control", placeholder = "Gender", @readonly = "true" })
                                            </div>
                                        </form>
                                    </div>
                                </div>

                                <div class="col-lg-6">
                                    <div class="panel">
                                        <form class="form-horizontal">
                                            <div class="form-group">
                                                <label class="col-xs-1 control-label doger-color" for="DateOfBirth">Date Of Birth: </label>
                                                @Html.TextBoxFor(x => x.DateOfBirth, new { @class = "form-control", placeholder = "Date Of Birth", @readonly = "true" })
                                                <input type="hidden" id="hdnDateOfBirth" value="@Model.DateOfBirth" />
                                                @Html.ValidationMessageFor(x => x.DateOfBirth, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                <label class="col-xs-1 control-label doger-color" for="PhoneNumber">Email: </label>
                                                @Html.TextBoxFor(x => x.Email, new { @class = "form-control", placeholder = "Email (Optional)", @readonly = "true" })
                                                @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="form-group">
                                                <label class="col-xs-1 control-label doger-color" for="PhoneNumber">Phone Number: </label>
                                                @Html.TextBoxFor(x => x.PhoneNumber, new { @class = "form-control", data_mask = "(999) 999-9999", placeholder = "Phone number", @readonly = "true" })
                                                @Html.ValidationMessageFor(x => x.PhoneNumber, "", new { @class = "text-danger" })
                                            </div>

                                        </form>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <br />

    <div class="row">
        <div class="col-lg-12">
            <div class="panel">
                <div class="panel-heading">
                    <h4 class="panel-title">Transfer Prescription</h4>
                </div>
                <div class="col-md-12 row" style="border:1px #000 solid;">
                    <div class="col-md-4 row">
                        <form class="form-horizontal">
                            <div class="form-group">
                                <label class="control-label"><b>Pharmacy ZipCode</b>(<span class="text-red" style="color:red;">*</span>)</label>
                                @Html.TextBox("txtPharmacyZipCode", null, new { @class = "form-control manualType", placeholder = "Pharmacy ZipCode" })
                            </div>
                            <div class="form-group">
                                <label class="control-label"><b>Drug Name</b>(<span class="text-red" style="color:red;">*</span>)</label>
                                @Html.TextBox("txtDrugName", null, new { @class = "form-control manualType", placeholder = "Drug Name" })
                                <input type="hidden" name="DragIdx" id="DragIdx" value="0" />
                            </div>
                            <div class="form-group">
                                <label class="control-label"><b>Order Date</b>(<span class="text-red" style="color:red;">*</span>)</label>
                                @Html.TextBox("txtOrderDate", null, new { @class = "datefield form-control", placeholder = "Order Date", @readonly = "true" })
                                @Html.ValidationMessage("txtOrderDate", "", new { @class = "text-danger" })
                            </div>

                        </form>
                    </div>
                    <div class="col-md-4 row">
                        <form class="form-horizontal">
                            <div class="form-group">
                                <label class="control-label"><b>Current Pharmacy</b>(<span class="text-red" style="color:red;">*</span>)</label>
                                @Html.TextBox("txtPharmacyName", null, new { @class = "form-control manualType", placeholder = "Current Pharmacy", disabled = "true" })
                                <input type="hidden" name="PharmacyId" id="PharmacyId" value="0" />
                            </div>
                            <div class="form-group">
                                <label class="control-label"><b>Drug Strength</b>(<span class="text-red" style="color:red;">*</span>)</label>
                                @Html.DropDownListFor(x => x.DrugStrengthId, ViewBag.DrugStrenthList as SelectList, "Select Drug Strength", new { @class = "Drugstrength form-control", disabled = "true" })
                                @Html.ValidationMessageFor(x => x.DrugStrengthId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label class="control-label">
                                    <b>Quantity</b>(<span class="text-red" style="color:red;">*</span>)&nbsp;<a href="javascript:void(0);" data-toggle="tooltip" title="&#8226; Please enter Quantity.
&#8226; Quantity must be in numbers.
&#8226; Quantity upto 100.
                                                                                                                                       "><i class="fa fa-question-circle text-blue"></i></a>
                                </label>
                                @Html.TextBox("txtQty", null, new { @class = "form-control", placeholder = "Quantity" })
                                @Html.ValidationMessage("txtQty", "", new { @class = "text-danger" })
                            </div>
                        </form>
                    </div>
                    <div class="col-md-4 row">
                        <form class="form-horizontal">
                            <div class="form-group">
                                <label class="control-label"><b>Pharmacy Phone Number</b></label>
                                @Html.TextBox("txtPhoneNumber", null, new { @class = "form-control", data_mask = "(999) 999-9999", placeholder = "Phone Number", @readonly = true })
                                @Html.ValidationMessage("txtPhoneNumber", "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label class="control-label"><b>Prescription Number</b>(<span class="text-red" style="color:red;">*</span>)</label>
                                @Html.TextBox("txtPrescriptionNo", null, new { @class = "form-control", placeholder = "Prescription Number" })
                            </div>

                            <div class="form-group" style="margin-top:46px; margin-left:17px;">
                                <input type="hidden" name="DrudIds" id="DrudIds" value="0" />
                                <input type="button" class="btn btn-primary" id="btnDrug" value="Add to List" />
                                <input type="button" class="btn btn-primary" style="display:none" id="btnDrugSave" value="Save" /><br />
                                <label class="control-label" id="lblError" style="color:red; display:none;"></label>
                            </div>
                        </form>
                    </div>

                    <br />
                    <br />

                    <div class="col-md-12 mar-btm row" style="text-align:center; padding-left:20px; padding-right:12px; padding-top:30px">
                        <table id="dtTransferPresInfo" class="table table-striped table-bordered table-hover" style="display:none;">
                            <thead>
                                <tr>
                                    <th>Transfer From</th>
                                    <th>Transfer To</th>
                                    <th>Drug Name</th>
                                    <th>Drug Strength Name</th>
                                    <th>Prescription Number</th>
                                    <th>Order Date</th>
                                    <th>Quantity</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.lstTransferPrescription != null)
                                {

                                    foreach (var item in Model.lstTransferPrescription)
                                    {
                                        var rowId = "row_" + item.DrugId;
                                        if (drugIds == "")
                                        {
                                            drugIds = item.DrugId.ToString();
                                        }
                                        else
                                        {
                                            drugIds += "," + item.DrugId.ToString();
                                        }
                                <tr id="@rowId" role='row'>
                                    <td><input type='hidden' class='curTransFromPhone' id="TransFromPhone_@item.DrugId" name="TransFromPhone_@item.DrugId" value=@item.TransFromPharmacyPhone /><input type='hidden' class='curTransFrom' id="TransFrom_@item.DrugId" name="TransFrom_@item.DrugId" value=@item.TransFromPharmacyId /><span class='TransFrom' id="TransFrom_@item.DrugId">@item.TransFromPharmacyName</span></td>
                                    <td><input type='hidden' class='curTransT' id="TransTo_@item.DrugId" name="TransTo_@item.DrugId" value=@item.TransToPharmacyId /><span class='TransTo' id="TransTo_@item.DrugId">@item.TransToPharmacyName</span></td>
                                    <td><input type='hidden' class='curDetailID' id="DetailId_@item.DrugId" name="DetailId_@item.DrugId" value='0' /><input type='hidden' class='curDrugID' id="DrugId_@item.DrugId" name="DrugId_@item.DrugId" value=@item.DrugId /><span class='curDrugName' id="DrugName_@item.DrugId">@item.DrugName</span></td>
                                    <td><input type='hidden' class='curDrugStrengthId' id="DrugStrength_@item.DrugId" name="DrugStrength_@item.DrugId" value=@item.DrugStrengthID /><span class='curDrugStrengthName' id="lblDrugStrength_@item.DrugId">@item.DrugStrengthName</span></td>
                                    <td><input type='hidden' id="PresNum_@item.DrugId" name="PresNum_@item.DrugId" value=@item.TransferPrescriptionNumber /><span class='PresNumber' id="lblPresNum_@item.DrugId">@item.TransferPrescriptionNumber</span></td>
                                    <td><input type='hidden' class='OptionFill' id="FillInfo_@item.DrugId" name="FillInfo_@item.DrugId" value=@item.RefillDate /><span id="lblFillInfo_@item.DrugId">@item.RefillDate</span></td>
                                    <td><input type='hidden' class='quantity' id="qty_@item.DrugId" name="qty_@item.DrugId" value=@item.Quantity /><span id="lblqty_@item.DrugId">@item.Quantity</span></td>
                                    <td><a href='JavaScript:' class="btn btn-danger btn-sm action deleteOrderRow"><i class='fa fa-times'></i></a></td>
                                </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                
            </div>
            <!--===================================================-->
            <!--End No Label Form-->
        </div>
    </div>
    <br />

    <div class="row">
        <div class="col-lg-12">
            <div class="panel">
                <div class="panel-heading">
                    <h3 class="panel-title">Delivery Type</h3>
                </div>
                <div class="panel-body">
                    <div class="row">
                        <div class="col-md-12 col-lg-12">
                            <label class="ml-1">
                                <input name="deliveryType" type="radio" id="homeDelivery" value="homeDelivery" />&nbsp;<label>Home Delivery</label>
                            </label>
                            <label class="ml-4">
                                <input name="deliveryType" type="radio" checked="checked" id="storePickup" value="storePickup" />&nbsp;<label>Pickup from store</label>
                            </label>
                        </div>
                        <div class="col-md-12 col-lg-12" style="display:none" id="divhomeDelivery">
                            <strong>                                 
                                <span class="label">
                                    <i aria-hidden="true" class="fa fa-map-marker" style="color: #3498db;margin-right:6px"></i><label>@Model.Address &nbsp;&nbsp;&nbsp; @Model.Address &nbsp;&nbsp;&nbsp; @Model.City &nbsp;&nbsp;&nbsp; @Model.State  - &nbsp;&nbsp;&nbsp; @Model.ZipCode</label>
                                </span>
                                <span class="label">
                                    <i aria-hidden="true" class="fa fa-phone" style="color: #3498db;margin-right:6px"></i><label>@Model.PhoneNumber</label>
                                </span>
                            </strong>
                        </div>
                        <div class="col-md-12 col-lg-12" id="divstorePickup">
                            <strong>
                                <span class="label">
                                    <i aria-hidden="true" class="fa fa-map-marker" style="color: #3498db;margin-right:6px"></i><label>@Model.Pharmacy.OrgName</label>
                                </span>
                                <span class="label">
                                    <i aria-hidden="true" style="color: #3498db;margin-right:10px"></i> <label>@Model.Pharmacy.FullAddress</label>
                                </span>
                                <span class="label">
                                    <i aria-hidden="true" class="fa fa-phone" style="color: #3498db;margin-right:6px"></i><label>@Model.Pharmacy.PhoneNumber</label>
                                </span>
                            </strong>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <br />

    <div class="row">
        <div class="col-lg-12 mt-2 border-top float-right">
            <button type="button" id="btnSubmit" class="btn btn-primary btn-lg mt-3" disabled="true">Continue</button>
        </div>
    </div>
    <br />
    <div id="dialog" title="Required*">
        <span id="popup"></span>
    </div>
</div>

@Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">

            jQuery(document).ready(function ($) {
                var toAddressId = @Html.Raw(Json.Encode(Model.Pharmacy.AddressId));
                var fromAddId = "";
                function Popup(msg) {
                    $("#popup").text(msg);
                    $("#dialog").dialog();
                };
       $(function ()
        {
            var lstoftranspres = @Html.Raw(Json.Encode(Model.lstTransferPrescription));
            var deliverytype = @Html.Raw(Json.Encode(Model.IsDeliveryType));
            deliverytype = deliverytype == 0 ? 'homeDelivery' : 'storePickup';
            $("#btnSubmit").prop('disabled', false);
           if (lstoftranspres != null)
             {
                $("#dtTransferPresInfo").show();
                BindDeliveryType(deliverytype);
             }
        });
                //$('.manualType').on("cut copy paste", function (e) {
                //    e.preventDefault();
                //});

                $("#btnDrug").click(function (event) {
                    AddDrugToList(event);
                });

                $('.datefield').datepicker({
                    format: 'mm/dd/yyyy',
                    endDate: '+0d',
                    todayBtn: "linked",
                    autoclose: true,
                    minDate: 0,
                    todayHighlight: true
                }).on('changeDate', function (selected) {
                    startDate = new Date(selected.date.valueOf());
                    startDate.setDate(startDate.getDate(new Date(selected.date.valueOf())));
                });

                $("#txtPrescriptionNo").on('input', function (event) {
                    this.value = this.value.replace(/[^A-Za-z0-9_-]/g, '');
                });

                $("#txtQty").on('input', function (event) {
                    this.value = this.value.replace(/[^0-9]/g, '');
                    var value = $(this).val();
                    if (value > 100) {
                        $("#txtQty").val("");
                        $("#lblError").show();
                        $("#lblError").text("Quantity upto 100!\n");
                        $("#txtQty").focus();
                    }
                    else if (value == 0) {
                        $("#txtQty").val("");
                        $("#lblError").show();
                        $("#lblError").text("Quantity cannot be 0! \n");
                        $("#txtQty").focus();
                    }
                    else { $("#lblError").hide(); }
                });

                $(function () {
                    $("#txtDrugName").autocomplete({
                        source: function (request, response) {
                            $.ajax({
                                url: "/Pharmacy/GetDrugInfo",
                                type: "POST",
                                dataType: "json",
                                data: { Prefix: request.term },
                                success: function (data) {
                                    if (!data.length) {
                                        var result = [
                                            {
                                                label: 'No matches found',
                                                value: response.term
                                            }
                                        ];
                                        response(result);
                                    }
                                    else {
                                        response($.map(data, function (item) {
                                            return { label: item.DrugName, value: item.DrugName, dataId: item.DrugId };
                                        }))
                                    }
                                },
                                error: function (result) {
                                    console.log(result);
                                }
                            })
                        },
                        minLength: 2,
                        select: function (event, ui) {
                            LoadDrugStrength(event, ui.item.dataId, '');
                        }
                    });
                });

                $jq("#txtPharmacyZipCode").autocomplete({
                    source: function (request, response) {
                        $jq.ajax({
                            url: '/GetZipCityStateList/' + encodeURI(request.term),
                            method: "GET",
                            dataType: "json",
                            contentType: "application/json; charset=utf-8",
                            success: function (data) {
                                if (JSON.stringify(data.length) > 0) {
                                    response(data);
                                } else {
                                    response(["Data not found"]);
                                }
                            },
                            error: function (result) {
                                console.log(result);
                            }
                        });
                    },
                    minLength: 3,
                    select: function (event, ui) {
                        if (ui.item.value.trim() !== "Data not found") {
                            $jq("#txtPharmacyZipCode").val(ui.item.value);
                             var LocationZip = $("#txtPharmacyZipCode").val();
                        var OrganisationId = @Model.Pharmacy.OrgUserTypeId;

                            $("#txtPharmacyName").prop('disabled', false);
                            LoadPharmacyName(event, LocationZip, OrganisationId);
                        }
                        else {
                            ui.item.value = '';
                            $("#txtPharmacyName").prop('disabled', true
                                );

                            $jq("#txtPharmacyZipCode").empty();
                        }
                    }
                });
                function LoadPharmacyName(event, LocationZip, OrganisationId) {
                    $jq("#txtPharmacyName").autocomplete({

                        source: function (request, response) {
                            $jq.ajax({
                                url: "/ProvdersProfile/GetPharmacyInfo",
                                type: "GET",
                                dataType: "json",
                                contentType: "application/json; charset=utf-8",
                                data: { searchLocationKey: LocationZip, OrgId: OrganisationId, searchprefix: request.term },
                                success: function (data) {
                                    if (!data.length) {
                                        var result = [
                                            {
                                                label: 'No matches found',
                                                value: response.term
                                            }
                                        ];
                                        response(result);
                                    }
                                    else {
                                        response($.map(data, function (item) {

                                            return { label: item.OrganisationName, value: item.OrganisationName, dataId: item.OrganisationId, OrgPhone: item.PhoneNumber, FromAddressId: item.AddressId};
                                        }))
                                    }
                                },
                                error: function (result) {
                                    console.log(result);
                                }
                            })
                        },
                        minLength: 3,
                        select: function (event, ui) {
                            $jq("#txtPharmacyName").val(ui.item.value);
                            $jq("#PharmacyId").val(ui.item.dataId);
                            $jq("#txtPhoneNumber").val(ui.item.OrgPhone);
                            fromAddId = ui.item.FromAddressId;
                            ValidateAddress(event, fromAddId);
                        }
                    });
                }

                function ValidateAddress(event, addresId)
                {
                    if (addresId == toAddressId) {
                                    $jq("#lblError").show();
                                    $jq("#lblError").text("Transfer to and Transfer from address cannot be same! \n");
                                    $jq("#txtPharmacyName").val('');
                                    $jq("#txtPharmacyName").focus();
                                    event.preventdefault();
                     }
                     else { $("#lblError").hide(); }
                }

                function LoadDrugStrength(event, drugId, drugStrengthId) {

                    $("#DrugStrengthId").prop('disabled', false);

                    $("#DragIdx").val(drugId);
                    $("#DrugStrengthId option").remove();
                    $('#DrugStrengthId').html('<option value="">Select Drug Strength</option>');
                    $("#DrugStrengthId").trigger("chosen:updated");
                    $jq.ajax({
                        url: "/ProvdersProfile/GetDrugStrengthByDrugId",
                        type: "GET",
                        dataType: "json",
                        data: { drugId: drugId },
                        success: function (data) {
                            $("#DrugStrengthId option").remove();
                            var options = '';
                            options += '<option value="">Select Drug Strength</option>';
                            for (var i = 0; i < data.length; i++) {
                                options += '<option value="' + data[i].DrugStrengthId + '">' + data[i].Name + '</option>';
                            }
                            $('#DrugStrengthId').html(options);

                            if (drugStrengthId != '') {
                                $('#DrugStrengthId').val(drugStrengthId);
                            }
                            $("#DrugStrengthId").trigger("chosen:updated");
                        }
                    });
                }

                function AddDrugToList(event) {

                    var drugID = $("#DragIdx").val();
                    var strDrugName = $("#txtDrugName").val();

                    var transToId = @Model.Pharmacy.OrgId; //This is Transfer From Pharmacy / Org Id
                    var transTo = @Html.Raw(Json.Encode(Model.Pharmacy.OrgName)); //This is Transfer From Pharmacy / Org Name
                    var transFrom = $("#txtPharmacyName").val(); //This is Transfer To Pharmacy / Org Name
                    var transFromId = $("#PharmacyId").val(); //This is Transfer To Pharmacy / Org Id
                    var transFromPhone = $("#txtPhoneNumber").val();  //This is Transfer To Pharmacy / Org Phone Number

                    var presNum = $("#txtPrescriptionNo").val();

                    var strDrugStrength = $('#DrugStrengthId').find('option:selected').text();// $("#txtDrugStrength").val();
                    var DrugStrengthId = $('option:selected', $('#DrugStrengthId')).val();

                    var strRefillDate = $("#txtOrderDate").val();
                    var qty = $("#txtQty").val();

                    var flag = true;
                    var checkValidation = Validation();

                    if (checkValidation != '') {
                        $("#lblError").show();
                        return;
                    }
                    else {
                        $("#lblError").hide();
                    }

                    if (parseInt(drugID) > 0 && $.trim(strDrugName) != "") {
                        $("#dtTransferPresInfo").show();
                        var objCell = "";
                        var rowID = "row_" + drugID;
                        var Ids = $("#DrudIds").val();
                        if (Ids == "") {
                            $("#DrudIds").val(drugID)
                        }
                        else {

                            if (flag == false) {
                                Popup("Drug already exsits!");
                            }
                            else {
                                Ids += "," + drugID;
                                $("#DrudIds").val(Ids);
                            }
                        }

                        if (flag == true) {
                            var orderRow = "<tr id='" + rowID + "' role='row'></tr>";
                            $("#dtTransferPresInfo tbody").append(orderRow);
                                                       
                            objCell = "<td><input type='hidden' class='curTransFromPhone' id='TransFromPhone_" + drugID + "' name='TransFromPhone_" + drugID + "' value='" + transFromPhone + "' /><input type='hidden' class='curTransFrom' id='TransFrom_" + drugID + "' name='TransFrom_" + drugID + "' value='" + transFromId + "' /><span class='TransFrom' id='TransFrom_" + drugID + "'>" + transFrom + "</span></td>";
                            objCell += "<td><input type='hidden' class='curTransTo' id='TransTo_" + drugID + "' name='TransTo_" + drugID + "' value='" + transToId + "' /><span class='TransTo' id='TransTo_" + drugID + "'>" + transTo + "</span></td>";
                            objCell += "<td><input type='hidden' class='curDetailID' id='DetailId_" + drugID + "' name='DetailId_" + drugID + "' value='0' /><input type='hidden' class='curDrugID' id='DrugId_" + drugID + "' name='DrugId_" + drugID + "' value='" + drugID + "' /><span class='curDrugName' id='DrugName_" + drugID + "'>" + strDrugName + "</span></td>";
                            objCell += "<td><input type='hidden' class='curDrugStrengthId' id='DrugStrength_" + drugID + "' name='DrugStrength_" + drugID + "' value='" + DrugStrengthId + "' /><span class='curDrugStrengthName' id='lblDrugStrength_" + drugID + "'>" + strDrugStrength + "</span></td>";
                            objCell += "<td><input type='hidden' id='PresNum_" + drugID + "' name='PresNum_" + drugID + "' value='" + presNum + "' /><span class='PresNumber' id='lblPresNum_" + drugID + "'>" + presNum + "</span></td>";
                            objCell += "<td><input type='hidden' class='OptionFill' id='FillInfo_" + drugID + "' name='FillInfo_" + drugID + "' value='" + strRefillDate + "' /><span id='lblFillInfo_" + drugID + "'>" + strRefillDate + "</span></td>";
                            objCell += "<td><input type='hidden' class='quantity' id='qty_" + drugID + "' name='qty_" + drugID + "' value='" + qty + "' /><span id='lblqty_" + drugID + "'>" + qty + "</span></td>";
                            objCell += "<td><a href='JavaScript:' class='btn btn-danger btn-sm action deleteOrderRow'><i class='fa fa-times'></i></a></td>";
                            $("#dtTransferPresInfo #" + rowID).append(objCell);

                        }
                        $("#DragIdx").val('0');
                        $("#txtPharmacyZipCode").val('');
                        $("#txtPharmacyName").val('');
                        $("#PharmacyId").val('0');
                        $("#txtDrugName").val('');
                        $("#txtPrescriptionNo").val('');
                        $("#txtQty").val('');
                        $("#txtOrderDate").val('');
                        $("#txtPhoneNumber").val('');
                        var options = '';
                        $("#DrugStrengthId option").remove();
                        options += '<option value="">Select Drug Strength</option>';
                        $('#DrugStrengthId').html(options);
                        $("#DrugStrengthId").trigger("chosen:updated");
                        $("#btnSubmit").prop('disabled', false);
                        $("#txtPharmacyName").prop('disabled', true);
                        ValidateAddress(event, fromAddId);
                    }
                }

                $(document).on('click', '.deleteOrderRow', function () {

                    var drugId = $(this).parent().parent().find('.curDrugID').val();
                    var title = "Delete New Prescription ?";
                    var message = "Are you sure you want to remove this New Prescription ?";
                    BinkeDialog.Confirmation(title, message, function () {
                        if (parseInt(drugId) > 0) {
                            $("#dtTransferPresInfo #row_" + drugId).remove();

                            //Hide the refill grid if there is no data
                            var rowCount = $('#dtTransferPresInfo tr').length - 1;

                            if (rowCount == 0) {
                                $("#btnDrug").show();
                                $("#btnDrugSave").hide();
                                $("#DragIdx").val('0');
                                $("#txtPharmacyZipCode").val('');
                                $("#txtPharmacyName").val('');
                                $("#PharmacyId").val('0');
                                $("#txtDrugName").val('');


                                var options = '';
                                $("#DrugStrengthId option").remove();
                                options += '<option value="">Select Drug Strength</option>';
                                $('#DrugStrengthId').html(options);
                                $("#DrugStrengthId").trigger("chosen:updated");

                                $("#txtPrescriptionNo").val('');
                                $("#txtQty").val('');
                                $("#txtOrderDate").val('');
                                $("#txtPhoneNumber").val('');

                                $("#dtTransferPresInfo").hide();
                                $("#btnSubmit").prop('disabled', true);
                                $("#txtDrugName").prop('disabled', false);
                                $("#txtPharmacyZipCode").prop('disabled', false);
                                $("#txtPharmacyName").prop('disabled', true);
                                $("#btnSubmit").prop('disabled', true);
                            }
                            else {
                                $("#dtTransferPresInfo").show();
                                $("#btnSubmit").prop('disabled', false);
                            }

                        }
                    })
                    var IdsArray = $("#DrudIds").val().split(",");

                    var newArrayItems = $.grep(IdsArray, function (value) {
                        return value != drugId;
                    });

                    $("#DrudIds").val(newArrayItems);
                });

                $('#btnDrugSave').on("click", function () {
                });


                $('#txtDrugName').change(function () {
                    if ($('#txtDrugName').val() == '') {
                        $("#DrugStrengthId").prop('disabled', true);
                        var options = '';
                        $("#DrugStrengthId option").remove();
                        options += '<option value="">Select Drug Strength</option>';
                        $('#DrugStrengthId').html(options);
                    }
                });

                function Validation() {
                    var errMsg = "";
                    if ($("#txtPharmacyZipCode").val() == '' || $("#txtPharmacyName").val() == '' || $("#txtDrugName").val() == '' ||
                        $("#DrugStrengthId").val() == '' || $("#txtPrescriptionNo").val() == '' || $("#txtQty").val() == '' || $("#txtOrderDate").val() == '') {
                        $("#lblError").text("Please enter Required Details! \n");
                        errMsg = "Validation Failed";
                    }
                    return errMsg;
                }

                $("#btnSubmit").click(function () {
                var radioValue = $("input[name='deliveryType']:checked").val();
                var transferPrescriptionInfo = [];

                    $('#dtTransferPresInfo tr').each(function (i, el) {
                        var Pres = {};
                        Pres.TransToPharmacyId = $(el).children('td').children('.curTransTo').val();
                        Pres.TransToPharmacyName = $(el).children('td').children('.TransTo').text();
                        Pres.TransFromPharmacyId = $(el).children('td').children('.curTransFrom').val();
                        Pres.TransFromPharmacyName = $(el).children('td').children('.TransFrom').text();
                        Pres.TransFromPharmacyPhone = $(el).children('td').children('.curTransFromPhone').val();

                        Pres.DrugId = $(el).children('td').children('.curDrugID').val();
                        Pres.DrugName = $(el).children('td').children('.curDrugName').text();
                        Pres.DrugStrengthId = $(el).children('td').children('.curDrugStrengthId').val();
                        Pres.DrugStrengthName = $(el).children('td').children('.curDrugStrengthName').text();
                        Pres.TransferPrescriptionNumber = $(el).children('td').children('.PresNumber').text();
                        Pres.RefillDate = $(el).children('td').children('.OptionFill').val();
                        Pres.Quantity = $(el).children('td').children('.quantity').val();
                        transferPrescriptionInfo.push(Pres);
                });

                    $.ajax({
                        type: 'POST',
                        url: "/ProvdersProfile/TransferPrescriptionInfo",
                        data: { transferPrescriptions: transferPrescriptionInfo, deliver: radioValue},
                        dataType: 'json',
                        async: true,
                        success: function (response) {
                            window.location.href = "@Url.Action("InsuranceDetails", "ProvdersProfile")";
                        },
                        failure: function (response) {
                            console.log(response.responseText);
                        },
                        error: function (response) {
                            console.log(response.responseText);
                        }
                    });
                });
                $('input[type=radio][name=deliveryType]').change(function () {
                    BindDeliveryType(this.value);
                });

                function BindDeliveryType(type) {
                    if (type == 'homeDelivery') {
                        $("#homeDelivery").prop("checked", "checked");
                        $("#divhomeDelivery").show();
                        $("#divstorePickup").hide();
                    }
                    else if (type == 'storePickup') {
                        $("#divstorePickup").show();
                        $("#divhomeDelivery").hide();
                    }
                }
            });


</script>



