
@model Binke.ViewModels.SpecialityViewModel
@{
    ViewBag.Title = "AddEditAgeGroup";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<head>
    <link href='https://assets.doctyme.com' rel='dns-prefetch preconnect'>
    <link href='//maps.googleapis.com' rel='dns-prefetch'>
    <link href='//maps.gstatic.com' rel='dns-prefetch'>

    <link rel='icon' href='favicon.ico' type='image/x-icon' />
</head>
<div class="modal-header">
    
    <h4 class="modal-title" id="myModalLabel">
        @(Model.Id == 0 ? "Add Speciality" : Model.IsViewMode ? "View Speciality" : "Edit Speciality")
    </h4>
</div>
<div class="modal-body">
    @using (Html.BeginForm("AddEditDoctorSpeciality", "Doctor", FormMethod.Post, new { id = "frmAgeGroup" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.DoctorId)
        <div class="row">
            <div class="col-md-12" style="display:flex">
                <h4> @Model.DoctorName</h4>  <a href="/Doctor/Index">Edit</a>
            </div>
            <div class="col-md-6" style="margin-top:10px;">
                <label class="control-label"><b>Select Speciality</b></label>

                <div class="form-group">
                    <div class="col-md-12">
                        @if (Model.IsViewMode)
                        {
                            @Html.DropDownListFor(x => x.SpecialityId, Model.SpecialitysList.Select(x => new SelectListItem { Text = x.SpecialityName, Value = x.SpecialityId.ToString(), Selected = (x.SpecialityId == Model.SpecialityId) }), new { @class = "form-control",@readonly="true",@style="pointer-events:none" })
                        }
                        else
                        { @Html.DropDownListFor(x => x.SpecialityId, Model.SpecialitysList.Select(x => new SelectListItem { Text = x.SpecialityName, Value = x.SpecialityId.ToString(), Selected = (x.SpecialityId == Model.SpecialityId) }), new { @class = "form-control" })

                    }

                    </div>



                </div>
                @*<label class="control-label"><b>Speciality Description</b></label>
                <div class="form-group">
                    <div class="col-md-12">
                        @if (Model.IsViewMode)
                        {
                            @Html.TextBoxFor(m => m.Description, new { @class = "form-control", placeholder = "Enter Description", @readonly = "true" })
                            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.Description, new { @class = "form-control", placeholder = "Enter Description", })
                            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                        }


                    </div>
                </div>*@
            </div>
        </div>


    }
</div>
<div class="col-md-4">
  
    <button type="button" id="btnSave" style='@(Model.IsViewMode?"display:none":"")' class="btn btn-primary">Save</button>
</div>
<script type="text/javascript">

    $("#btnSave").click(function() {
        $.validator.unobtrusive.parse($('#frmAgeGroup'));
        if ($("#frmAgeGroup").valid()) {
            $.post("@Url.Action("AddEditDoctorSpeciality")", $("#frmAgeGroup").serialize(), function (response) {
                HandleResponse(response);
                if (response.Status) {
                    window.location.href = "/DoctorSpeciality/"+@Model.DoctorId;
                }
            });
        }
    });

</script>

