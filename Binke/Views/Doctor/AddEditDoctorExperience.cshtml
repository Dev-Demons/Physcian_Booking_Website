@model Doctyme.Model.DoctorExperienceViewModel
@using Binke.Utility
@using Binke.App_Helpers
@{
    /**/

    ViewBag.Title = "Experience";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var isDoctor = User.Identity.GetClaimValue("UserRole") == "Doctor";
}
<head>
    @*<link href='https://assets.doctyme.com' rel='dns-prefetch preconnect'>*@
 
    @*<link href='//maps.googleapis.com' rel='dns-prefetch'>
    <link href='//maps.gstatic.com' rel='dns-prefetch'>*@

    <link rel='icon' href='favicon.ico' type='image/x-icon' />
</head>
<script src="https://code.jquery.com/jquery-1.12.4.js"></script><link href="https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css"
      rel="stylesheet" />

<script src="https://code.jquery.com/ui/1.10.4/jquery-ui.js"></script>

<style type="text/css">
    .mr-10px {
        margin-right: 10px;
    }

    .header-title {
        padding: 6px;
        margin-left: 6px;
    }
</style>
<!-- Latest compiled JavaScript -->
@*<h4 style='margin-top:10px;margin-bottom:15px; text-align:center;@(User.Identity.GetClaimValue("UserRole").ToString()=="Doctor"?"display:none":"")'>@Model.DoctorName</h4>*@
<div class="row">
    <div class="col-lg-12">
        <div class="panel">
            <div class="panel-heading box-header" style="display:flex">
                <h4 class="title header-title" style="width:100%">
                    @(Model.ExperienceId == 0 ? "Add Experience" : Model.IsViewMode ? "View Experience" : "Edit Experience")
                </h4>
                
            </div>
            @using (Html.BeginForm("AddEditExperience", "Doctor", FormMethod.Post, new { id = "frmExperience" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.ExperienceId)
                @Html.HiddenFor(m => m.DoctorId)
                <div class="panel-body">
                    <div class="form-group">
                        <div class="row">

                            <div class="col-md-4 mar-btm">
                                <label class="control-label"><b>Enter Designation</b></label>
                                @if (Model.IsViewMode)
                                {
                                    @Html.TextBoxFor(m => m.Designation, new { @class = "form-control", placeholder = "Enter Designation", @readonly = "true" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.Designation, new { @class = "form-control", placeholder = "Enter Designation" })

                                }

                            </div>
                            <div class="col-md-4 mar-btm">
                                <label class="control-label"><b>Organization</b></label>
                                @if (Model.IsViewMode)
                                {
                                    @Html.TextBoxFor(m => m.Organization, new { @class = "form-control", placeholder = "Enter Organization", @readonly = "true" })
                                    @Html.ValidationMessageFor(m => m.Organization, "", new { @class = "text-danger" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.Organization, new { @class = "form-control", placeholder = "Enter Organization", })
                                    @Html.ValidationMessageFor(m => m.Organization, "", new { @class = "text-danger" })
                                }

                            </div>
                            <div class="col-md-4 mar-btm">
                                <label class="control-label"><b>Start Date</b></label>
                                @if (Model.IsViewMode)
                                {
                                    @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", placeholder = "Enter StartDate", @readonly = "true", type = "text" })
                                    @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control", placeholder = "Enter StartDate", type = "text" })
                                    @Html.ValidationMessageFor(m => m.StartDate, "", new { @class = "text-danger" })
                                }

                            </div>
                            <div class="col-md-4 mar-btm">
                                <label class="control-label"><b>End Date</b></label>
                                @if (Model.IsViewMode)
                                {
                                    @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", placeholder = "End Date", @readonly = "true", type = "text" })
                                    @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.EndDate, new { @class = "form-control", placeholder = "Enter End Date", type = "text" })
                                    @Html.ValidationMessageFor(m => m.EndDate, "", new { @class = "text-danger" })
                                }

                            </div>
                            <div class="col-md-12 mar-btm" style="margin-top:30px;">
                                <label class="control-label" style="width:250px" for="IsActive">Is Active</label>
                                <label id="switchNtPcp" class="switch" for="IsActive">
                                    <input type="checkbox" id="IsActive" name="IsActive" @( Model.IsActive == true ? "checked" : string.Empty) data-Id="IsActive" />&nbsp;
                                    <span class="slider round" style="width:35px;"></span> &nbsp;
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer text-right">
                    <button type="button" id="btnSave" style='@(Model.IsViewMode?"display:none":"")' class="btn btn-primary">Save</button> <a href="/DoctorExperience/@Model.DoctorId" style="color:white" class="btn btn-primary">Back</a>
                </div>
            }

        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        $("#StartDate").val('@(Model.StartDate.ToString("dd/MM/yyyy")=="01/01/0001"?DateTime.Now.ToString("dd/MM/yyyy"):Model.StartDate.ToString("dd/MM/yyyy"))');
        $('#EndDate').val('@(Model.EndDate.ToString("dd/MM/yyyy") == "01/01/0001" ? DateTime.Now.ToString("dd/MM/yyyy") : Model.EndDate.ToString("dd/MM/yyyy"))');
        $("#StartDate").datepicker({
            dateFormat: 'dd/mm/yy',
         
        }).on('changeDate', function () {
            // set the "fromDate" end to not be later than "toDate" starts:
            $('#EndDate').datepicker('setStartDate', new Date($(this).val()));
        });
        $("#EndDate").datepicker({
            dateFormat: 'dd/mm/yy',
           
        }).on('changeDate', function () {
            // set the "fromDate" end to not be later than "toDate" starts:
            $('#StartDate').datepicker('setEndDate', new Date($(this).val()));
        });

        $('#EndDate').datepicker("setDate", '@(Model.EndDate.ToString("dd/MM/yyyy") == "01/01/0001" ? DateTime.Now.ToString("dd/MM/yyyy") : Model.EndDate.ToString("dd/MM/yyyy"))').datepicker("option", "minDate",'@(Model.StartDate.ToString("dd/MM/yyyy")=="01/01/0001"?DateTime.Now.ToString("dd/MM/yyyy"):Model.StartDate.ToString("dd/MM/yyyy"))')
        $("#StartDate").datepicker("setDate", '@(Model.StartDate.ToString("dd/MM/yyyy")=="01/01/0001"?DateTime.Now.ToString("dd/MM/yyyy"):Model.StartDate.ToString("dd/MM/yyyy"))').datepicker("option", "maxDate", '@(Model.EndDate.ToString("dd/MM/yyyy") == "01/01/0001" ? DateTime.Now.ToString("dd/MM/yyyy") : Model.EndDate.ToString("dd/MM/yyyy"))');




    })
    $("#btnSave").click(function () {

        $.validator.unobtrusive.parse($('#frmExperience'));
        if ($("#frmExperience").valid()) {
            $.post("@Url.Action("AddEditDoctorExperience")", $("#frmExperience").serialize(), function (response) {
                HandleResponse(response);
                if (response.Status) {
                    window.location.href = "/DoctorExperience/"+@Model.DoctorId;
                }
            });
        }
    });

</script>

