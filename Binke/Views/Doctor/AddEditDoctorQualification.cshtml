@model Doctyme.Model.DoctorQualificationViewModel
@using Binke.Utility
@using Binke.App_Helpers
@{
    ViewBag.Title = "Qualification";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    var isDoctor = User.Identity.GetClaimValue("UserRole") == "Doctor";
}
<head>
    <link href='https://assets.doctyme.com' rel='dns-prefetch preconnect'>
    <link href='//maps.googleapis.com' rel='dns-prefetch'>
    <link href='//maps.gstatic.com' rel='dns-prefetch'>

    <link rel='icon' href='favicon.ico' type='image/x-icon' />
</head>
<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-3.4.1.min.js"></script>

<style type="text/css">
    .mr-10px {
        margin-right: 10px;
    }

    .header-title {
        padding: 6px;
        margin-left: 6px;
    }
</style>
<!-- Latest compiled JavaScript -->
@*<h4 style='margin-top:10px;margin-bottom:15px; text-align:center;@(User.Identity.GetClaimValue("UserRole").ToString()=="Doctor"?"display:none":"")'>@Model.DoctorName</h4>*@
<div class="row">
    <div class="col-lg-12">
        <div class="panel">
            <div class="panel-heading box-header" style="display:flex">
                <h4 class="title header-title" style="width:50%">
                    @(Model.QualificationId == 0 ? "Add Qualification" : Model.IsViewMode ? "View Qualification" : "Edit Qualification")
                </h4>

            </div>
            @using (Html.BeginForm("AddEditQualification", "Doctor", FormMethod.Post, new { id = "frmQualification" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.QualificationId)
                @Html.HiddenFor(m => m.DoctorId)
                <div class="panel-body">
                    <div class="form-group">
                        <div class="row">

                            <div class="col-md-4 mar-btm">
                                <label class="control-label"><b>Enter Institute</b></label>
                                @if (Model.IsViewMode)
                                {
                                    @Html.TextBoxFor(m => m.Institute, new { @class = "form-control", placeholder = "Enter Institue", @readonly = "true" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.Institute, new { @class = "form-control", placeholder = "Enter Institue" })

                                }


                            </div>
                            <div class="col-md-4 mar-btm">
                                <label class="control-label"><b>Degree</b></label>
                                @if (Model.IsViewMode)
                                {
                                    @Html.TextBoxFor(m => m.Degree, new { @class = "form-control", placeholder = "Enter Degree", @readonly = "true" })
                                    @Html.ValidationMessageFor(m => m.Degree, "", new { @class = "text-danger" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.Degree, new { @class = "form-control", placeholder = "Enter Degree", })
                                    @Html.ValidationMessageFor(m => m.Degree, "", new { @class = "text-danger" })
                                }

                            </div>
                            <div class="col-md-4 mar-btm">
                                <label class="control-label"><b>Passing Year</b></label>
                                @if (Model.IsViewMode)
                                {
                                    @Html.TextBoxFor(m => m.PassingYear, new { @class = "form-control", placeholder = "Enter PassingYear", @readonly = "true" })
                                    @Html.ValidationMessageFor(m => m.PassingYear, "", new { @class = "text-danger" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.PassingYear, new { @class = "form-control", placeholder = "Enter PassingYear", })
                                    @Html.ValidationMessageFor(m => m.PassingYear, "", new { @class = "text-danger" })
                                }



                            </div>
                            <div class="col-md-4 mar-btm">
                                <label class="control-label"><b>Notes</b></label>
                                @if (Model.IsViewMode)
                                {
                                    @Html.TextBoxFor(m => m.Notes, new { @class = "form-control", placeholder = "Enter Notes", @readonly = "true" })
                                    @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.Notes, new { @class = "form-control", placeholder = "Enter Notes", })
                                    @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger" })
                                }



                            </div>
                            <div class="col-md-12 mar-btm" style="margin-top:30px;">
                                <label class="control-label"><b>Is Active</b></label>
                                <label class="switch">
                                    <input type="checkbox" id="IsActive" @(Model.IsActive ? "checked" : "") name="IsActive" data-Id="IsActive" />
                                    <span class="slider round" style="width:35px;"></span> &nbsp;
                                </label>
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer text-right">
                    <button type="button" id="btnSave" style='@(Model.IsViewMode?"display:none":"")' class="btn btn-primary">Save</button> <a href="/DoctorQualification/@Model.DoctorId" style="color:white" class="btn btn-primary">Back</a>
                </div>
            }

        </div>
    </div>
</div>


<script type="text/javascript">

    @*if ("@Model.IsActive" == 'True') {
                $("#IsActive").prop('checked', true);
                $("#IsActive").val(true);
            }
            else {
                $("#IsActive").prop('checked', false);
                $("#IsActive").val(false);
    }*@

    $("#btnSave").click(function() {
        $.validator.unobtrusive.parse($('#frmQualification'));
        if ($("#frmQualification").valid()) {
            $.post("@Url.Action("AddEditDoctorQualification")", $("#frmQualification").serialize(), function (response) {
                HandleResponse(response);
                if (response.Status) {
                    window.location.href = "/DoctorQualification/"+@Model.DoctorId;
                }
            });
        }
    });

</script>

