@model Binke.ViewModels.AgeGroupViewModel
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
        &times;
    </button>
    <h4 class="modal-title" id="myModalLabel">
        @(Model.AgeGroupId == 0 ? "Add Age Group" : Model.IsViewMode ? "View Age Group": "Edit Age Group")
    </h4>
</div>
<div class="modal-body">
    @using (Html.BeginForm("AddEditAgeGroup", "Doctor", FormMethod.Post, new { id = "frmAgeGroup" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.AgeGroupId)

        <div class="row">
            <div class="col-md-12">
                <label class="control-label"><b>AgeGroup Name</b></label>
                <div>@Model.DoctorName</div>
                <div class="form-group">
                    <div class="col-md-12">
                        @Html.DropDownList("AgeGroupId", ViewBag.AgegroupList as SelectList)
                    </div>
                   


                </div>
                <label class="control-label"><b>AgeGroup Description</b></label>
                <div class="form-group">
                    <div class="col-md-12">
                        @if (Model.IsViewMode)
                        {
                            @Html.TextBoxFor(m => m.Description, new { @class = "form-control", placeholder = "Enter Description", @readonly = "true" })
                            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                        }
                        else
                        {
                            @Html.TextBoxFor(m => m.Description, new { @class = "form-control", placeholder = "Enter Description", })
                            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
                        }


                    </div>
                </div>
            </div>
            </div>
       

    }
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-default"  data-dismiss="modal">Close</button>
    <button type="button" id="btnSave" style='@(Model.IsViewMode?"display:none":"")' class="btn btn-primary">Submit</button>
</div>
<script type="text/javascript">

    $("#btnSave").click(function() {
        $.validator.unobtrusive.parse($('#frmAgeGroup'));
        if ($("#frmAgeGroup").valid()) {
            $.post("@Url.Action("AddEditAgeGroup")", $("#frmAgeGroup").serialize(), function (response) {
                HandleResponse(response);
                if (response.Status) {
                    bindAgeGroupList();
                    closeModal();
                }
            });
        }
    });
    
</script>