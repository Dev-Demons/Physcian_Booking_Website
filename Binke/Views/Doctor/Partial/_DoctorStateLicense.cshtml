@model  Binke.ViewModels.DoctorStateLicenseUpdateViewModel
@{
    ViewBag.Title = "Doctor State Licenses";
}
@if (ViewBag.DoctorID > 0)
{@*<h4 style="text-align:center; background-color:#f4f6f9; color:#54abd9;">@Session["DoctorName"]</h4>*@}
<div class="box-header">
    <h4 class="title">
        @(Model.DocOrgStateLicenseId == 0 ? "Add Doctor State License" :Model.IsViewMode?"View Doctor State License": "Edit Doctor State License")
    </h4>
</div>

<div class="modal-body">

    @using (Html.BeginForm("AddEditDoctorStateLicense", "Doctor", FormMethod.Post, new { id = "frmDoctorStateLicense", @class = "form-horizontal form-bordered" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.DocOrgStateLicenseId)
        @Html.HiddenFor(model => model.DoctorId)
        
        @Html.HiddenFor(model => model.UserTypeID)




        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    <div class="col-md-12 row">
                        <div class="col-md-4 mar-btm">
                            <label class="control-label"><b>Taxonomy Code</b></label>
                            @Html.TextBoxFor(model => model.HealthCareProviderTaxonomyCode, new { @class = "form-control", placeholder = "Enter Taxonomy Code" })
                            @Html.ValidationMessageFor(model => model.HealthCareProviderTaxonomyCode, "", new { @class = "text-danger" })
                            
                            
                        </div>

                        <div class="col-md-4 mar-btm">
                            <label class="control-label"><b>License Number</b></label>
                            @Html.TextBoxFor(model => model.ProviderLicenseNumber, new { @class = "form-control", placeholder = "Enter License Number" })
                            @Html.ValidationMessageFor(model => model.ProviderLicenseNumber, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4 mar-btm">
                            <label class="control-label"><b>State Code</b></label>
                            @Html.DropDownListFor(model => model.ProviderLicenseNumberStateCode, ViewBag.stateList as SelectList, "- Select -", new { @class = "form-control chosen-select" })
                            @Html.ValidationMessageFor(model => model.ProviderLicenseNumberStateCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-12 row">
                        <div class="col-md-4 mar-btm" style="margin-top:30px;">
                            <label class="control-label"><b>Is Primary Taxonomy</b></label>
                            <label class="switch">
                                <input type="checkbox" id="HealthcareProviderPrimaryTaxonomySwitch" name="HealthcareProviderPrimaryTaxonomySwitch" dataId="HealthcareProviderPrimaryTaxonomySwitch" value="HealthcareProviderPrimaryTaxonomySwitch" />
                                <span class="slider round" style="width:35px;"></span> &nbsp;
                            </label>
                            @Html.ValidationMessageFor(model => model.HealthcareProviderPrimaryTaxonomySwitch, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 mar-btm" style="margin-top:30px;">
                            <label class="control-label"><b>Is Active</b></label>
                            <label class="switch">
                                <input type="checkbox" id="IsActive" name="IsActive" dataId="IsActive" value="IsActive" />
                                <span class="slider round" style="width:35px;"></span> &nbsp;
                            </label>
                            @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3 mar-btm" style="text-align:right; margin-top:30px;">
                            <button type="button" id="btnSave" class="btn btn-primary">Submit</button>
                        </div>
                    </div>
                    </div>
                </div>
        </div>
    }

</div>




@Scripts.Render("~/bundles/jqueryval")
<script type="text/javascript">
    $.validator.setDefaults({ ignore: null });
    $(document).ready(function () {

        $("#DoctorID").val('@ViewBag.DoctorID');
    
        $("#UserTypeID").val('2');

        $("#ProviderLicenseNumberStateCode").chosen();
        $("#ProviderLicenseNumberStateCode_chosen").css("width", "100%");

        var ID = "@ViewBag.ID";

        if (ID > 0) {
        
        if ("@Model.IsActive" == 'True') {
            $("#IsActive").prop('checked', true);
            $("#IsActive").val(true);
        }
        else {
            $("#IsActive").prop('checked', false);
            $("#IsActive").val(false);
        }

        if ("@Model.HealthcareProviderPrimaryTaxonomySwitch" == 'True') {
            $("#HealthcareProviderPrimaryTaxonomySwitch").prop('checked', true);
            $("#HealthcareProviderPrimaryTaxonomySwitch").val(true);
        }
        else {
            $("#HealthcareProviderPrimaryTaxonomySwitch").prop('checked', false);
            $("#HealthcareProviderPrimaryTaxonomySwitch").val(false);
        }
        
    }

    $(document).on('click', '.slider',function () {
        var chekedstatus = $(this).parent().find(":checkbox").is(":checked");
        if (chekedstatus == false)
            $(this).parent().find(":checkbox").val(true);
        else
            $(this).parent().find(":checkbox").val(false);
    });


        $("#HealthCareProviderTaxonomyCode").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Doctor/GetTaxonomy",
                    type: "POST",
                    dataType: "json",
                    data: { Prefix: request.term },
                    success: function (data) {
                        if (!data.length) {
                            var result = [
                                {
                                    label: 'No matches found',
                                    value: response.term
                                }
                            ];
                            response(result);
                        }
                        else {
                            response($.map(data, function (item) {
                                return { label: item.Taxonomy_Code + " | " + item.Specialization, value: item.Taxonomy_Code, dataId: item.TaxonomyID, dataText: item.Specialization };
                            }))
                        }
                    },
                    error: function (result) {
                        console.log(result);
                    }
                })
            },
            minLength: 3,
            select: function (event, ui) {
                $(this).val(ui.item.label);
            }
        });


            $("#btnSave").click(function () {
                $.validator.unobtrusive.parse($('#frmDoctorStateLicense'));
                if ($("#frmDoctorStateLicense").valid()) {
                    $.post("@Url.Action("AddEditDoctorStateLicense")", $("#frmDoctorStateLicense").serialize(), function (response) {
                        HandleResponse(response);
                        if (response.Status) {
                            if (response.Status == 1) {
                                window.location.reload();
                            } else {
                                location.reload();
                            }
                        }
                    });
                }
            });

    });
</script>
